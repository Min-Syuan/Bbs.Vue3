2023-12-13 12:22:25.631 +08:00 [INF] Yi框架-Abp.vNext，启动！
2023-12-13 12:22:30.214 +08:00 [INF] Loaded ABP modules:
2023-12-13 12:22:30.215 +08:00 [INF] - Yi.Abp.Web.YiAbpWebModule
2023-12-13 12:22:30.215 +08:00 [INF]   - Yi.Abp.SqlsugarCore.YiAbpSqlSugarCoreModule
2023-12-13 12:22:30.215 +08:00 [INF]     - Yi.Abp.Domain.YiAbpDomainModule
2023-12-13 12:22:30.215 +08:00 [INF]       - Yi.Abp.Domain.Shared.YiAbpDomainSharedModule
2023-12-13 12:22:30.215 +08:00 [INF]         - Yi.Framework.Rbac.Domain.Shared.YiFrameworkRbacDomainSharedModule
2023-12-13 12:22:30.215 +08:00 [INF]           - Volo.Abp.Domain.AbpDddDomainSharedModule
2023-12-13 12:22:30.215 +08:00 [INF]             - Volo.Abp.MultiTenancy.AbpMultiTenancyAbstractionsModule
2023-12-13 12:22:30.215 +08:00 [INF]               - Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemModule
2023-12-13 12:22:30.215 +08:00 [INF]               - Volo.Abp.Localization.AbpLocalizationModule
2023-12-13 12:22:30.215 +08:00 [INF]                 - Volo.Abp.Settings.AbpSettingsModule
2023-12-13 12:22:30.215 +08:00 [INF]                   - Volo.Abp.Localization.AbpLocalizationAbstractionsModule
2023-12-13 12:22:30.215 +08:00 [INF]                   - Volo.Abp.Security.AbpSecurityModule
2023-12-13 12:22:30.215 +08:00 [INF]                   - Volo.Abp.Data.AbpDataModule
2023-12-13 12:22:30.215 +08:00 [INF]                     - Volo.Abp.ObjectExtending.AbpObjectExtendingModule
2023-12-13 12:22:30.215 +08:00 [INF]                       - Volo.Abp.Validation.AbpValidationAbstractionsModule
2023-12-13 12:22:30.215 +08:00 [INF]                     - Volo.Abp.Uow.AbpUnitOfWorkModule
2023-12-13 12:22:30.215 +08:00 [INF]                     - Volo.Abp.EventBus.Abstractions.AbpEventBusAbstractionsModule
2023-12-13 12:22:30.215 +08:00 [INF]                 - Volo.Abp.Threading.AbpThreadingModule
2023-12-13 12:22:30.215 +08:00 [INF]           - Yi.Framework.Mapster.YiFrameworkMapsterModule
2023-12-13 12:22:30.215 +08:00 [INF]             - Yi.Framework.Core.YiFrameworkCoreModule
2023-12-13 12:22:30.215 +08:00 [INF]             - Volo.Abp.ObjectMapping.AbpObjectMappingModule
2023-12-13 12:22:30.215 +08:00 [INF]         - Yi.Framework.Bbs.Domain.Shared.YiFrameworkBbsDomainSharedModule
2023-12-13 12:22:30.215 +08:00 [INF]       - Yi.Framework.Rbac.Domain.YiFrameworkRbacDomainModule
2023-12-13 12:22:30.215 +08:00 [INF]         - Volo.Abp.AspNetCore.SignalR.AbpAspNetCoreSignalRModule
2023-12-13 12:22:30.215 +08:00 [INF]           - Volo.Abp.AspNetCore.AbpAspNetCoreModule
2023-12-13 12:22:30.215 +08:00 [INF]             - Volo.Abp.Auditing.AbpAuditingModule
2023-12-13 12:22:30.215 +08:00 [INF]               - Volo.Abp.Json.AbpJsonModule
2023-12-13 12:22:30.215 +08:00 [INF]                 - Volo.Abp.Json.SystemTextJson.AbpJsonSystemTextJsonModule
2023-12-13 12:22:30.215 +08:00 [INF]                   - Volo.Abp.Json.AbpJsonAbstractionsModule
2023-12-13 12:22:30.215 +08:00 [INF]                   - Volo.Abp.Timing.AbpTimingModule
2023-12-13 12:22:30.215 +08:00 [INF]               - Volo.Abp.MultiTenancy.AbpMultiTenancyModule
2023-12-13 12:22:30.215 +08:00 [INF]               - Volo.Abp.Auditing.AbpAuditingContractsModule
2023-12-13 12:22:30.215 +08:00 [INF]             - Volo.Abp.Http.AbpHttpModule
2023-12-13 12:22:30.215 +08:00 [INF]               - Volo.Abp.Http.AbpHttpAbstractionsModule
2023-12-13 12:22:30.215 +08:00 [INF]               - Volo.Abp.Minify.AbpMinifyModule
2023-12-13 12:22:30.215 +08:00 [INF]             - Volo.Abp.Authorization.AbpAuthorizationModule
2023-12-13 12:22:30.215 +08:00 [INF]               - Volo.Abp.Authorization.AbpAuthorizationAbstractionsModule
2023-12-13 12:22:30.215 +08:00 [INF]             - Volo.Abp.Validation.AbpValidationModule
2023-12-13 12:22:30.215 +08:00 [INF]             - Volo.Abp.ExceptionHandling.AbpExceptionHandlingModule
2023-12-13 12:22:30.215 +08:00 [INF]         - Volo.Abp.Domain.AbpDddDomainModule
2023-12-13 12:22:30.215 +08:00 [INF]           - Volo.Abp.EventBus.AbpEventBusModule
2023-12-13 12:22:30.215 +08:00 [INF]             - Volo.Abp.Guids.AbpGuidsModule
2023-12-13 12:22:30.215 +08:00 [INF]             - Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule
2023-12-13 12:22:30.215 +08:00 [INF]             - Volo.Abp.DistributedLocking.AbpDistributedLockingAbstractionsModule
2023-12-13 12:22:30.215 +08:00 [INF]           - Volo.Abp.Specifications.AbpSpecificationsModule
2023-12-13 12:22:30.215 +08:00 [INF]           - Volo.Abp.Caching.AbpCachingModule
2023-12-13 12:22:30.215 +08:00 [INF]             - Volo.Abp.Serialization.AbpSerializationModule
2023-12-13 12:22:30.215 +08:00 [INF]       - Yi.Framework.Bbs.Domain.YiFrameworkBbsDomainModule
2023-12-13 12:22:30.215 +08:00 [INF]     - Yi.Framework.Rbac.SqlSugarCore.YiFrameworkRbacSqlSugarCoreModule
2023-12-13 12:22:30.215 +08:00 [INF]       - Yi.Framework.SqlSugarCore.YiFrameworkSqlSugarCoreModule
2023-12-13 12:22:30.215 +08:00 [INF]     - Yi.Framework.Bbs.SqlSugarCore.YiFrameworkBbsSqlSugarCoreModule
2023-12-13 12:22:30.215 +08:00 [INF]   - Yi.Abp.Application.YiAbpApplicationModule
2023-12-13 12:22:30.215 +08:00 [INF]     - Yi.Abp.Application.Contracts.YiAbpApplicationContractsModule
2023-12-13 12:22:30.215 +08:00 [INF]       - Yi.Framework.Rbac.Application.Contracts.YiFrameworkRbacApplicationContractsModule
2023-12-13 12:22:30.215 +08:00 [INF]         - Yi.Framework.Ddd.Application.Contracts.YiFrameworkDddApplicationContractsModule
2023-12-13 12:22:30.215 +08:00 [INF]           - Volo.Abp.Application.AbpDddApplicationContractsModule
2023-12-13 12:22:30.215 +08:00 [INF]       - Yi.Framework.Bbs.Application.Contracts.YiFrameworkBbsApplicationContractsModule
2023-12-13 12:22:30.215 +08:00 [INF]     - Yi.Framework.Rbac.Application.YiFrameworkRbacApplicationModule
2023-12-13 12:22:30.215 +08:00 [INF]       - Yi.Framework.Ddd.Application.YiFrameworkDddApplicationModule
2023-12-13 12:22:30.215 +08:00 [INF]         - Volo.Abp.Application.AbpDddApplicationModule
2023-12-13 12:22:30.215 +08:00 [INF]           - Volo.Abp.Features.AbpFeaturesModule
2023-12-13 12:22:30.215 +08:00 [INF]           - Volo.Abp.GlobalFeatures.AbpGlobalFeaturesModule
2023-12-13 12:22:30.215 +08:00 [INF]       - Volo.Abp.BackgroundWorkers.Quartz.AbpBackgroundWorkersQuartzModule
2023-12-13 12:22:30.215 +08:00 [INF]         - Volo.Abp.Quartz.AbpQuartzModule
2023-12-13 12:22:30.215 +08:00 [INF]     - Yi.Framework.Bbs.Application.YiFrameworkBbsApplicationModule
2023-12-13 12:22:30.215 +08:00 [INF]   - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcModule
2023-12-13 12:22:30.215 +08:00 [INF]     - Volo.Abp.ApiVersioning.AbpApiVersioningAbstractionsModule
2023-12-13 12:22:30.215 +08:00 [INF]     - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcContractsModule
2023-12-13 12:22:30.215 +08:00 [INF]     - Volo.Abp.UI.Navigation.AbpUiNavigationModule
2023-12-13 12:22:30.215 +08:00 [INF]       - Volo.Abp.UI.AbpUiModule
2023-12-13 12:22:30.215 +08:00 [INF]   - Volo.Abp.Autofac.AbpAutofacModule
2023-12-13 12:22:30.215 +08:00 [INF]     - Volo.Abp.Castle.AbpCastleCoreModule
2023-12-13 12:22:30.215 +08:00 [INF]   - Volo.Abp.Swashbuckle.AbpSwashbuckleModule
2023-12-13 12:22:30.215 +08:00 [INF]   - Volo.Abp.AspNetCore.Serilog.AbpAspNetCoreSerilogModule
2023-12-13 12:22:30.215 +08:00 [INF]   - Volo.Abp.AspNetCore.Authentication.JwtBearer.AbpAspNetCoreAuthenticationJwtBearerModule
2023-12-13 12:22:30.215 +08:00 [INF]   - Yi.Framework.AspNetCore.YiFrameworkAspNetCoreModule
2023-12-13 12:22:30.424 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.447 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.449 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.450 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.452 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.455 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.457 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.458 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.459 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.461 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.462 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.464 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.465 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.465 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.466 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.467 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.471 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.472 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.473 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.475 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.476 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.476 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.478 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.478 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 12:22:30.633 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Dept`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 12:22:30.648 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Dictionary`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 12:22:30.651 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `DictionaryType`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 12:22:30.655 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Menu`  WHERE ( `MenuName` = N'系统管理' )  AND ( `IsDeleted` = 0 ) 
2023-12-13 12:22:30.658 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Post`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 12:22:30.660 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Role`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 12:22:30.663 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `User`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 12:22:30.983 +08:00 [INF] User profile is available. Using 'C:\Users\chenchun\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-13 12:22:31.042 +08:00 [INF] Initialized all ABP modules.
2023-12-13 12:22:31.143 +08:00 [INF] Now listening on: http://[::]:19001
2023-12-13 12:22:31.143 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-13 12:22:31.144 +08:00 [INF] Hosting environment: Development
2023-12-13 12:22:31.144 +08:00 [INF] Content root path: E:\code\csharp\Yi\Yi.Abp.Net8\src\Yi.Abp.Web
2023-12-13 12:24:24.291 +08:00 [INF] CORS policy execution successful.
2023-12-13 12:24:24.330 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 1:14:24', Current time (UTC): '2023/12/13 4:24:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 12:24:24.330 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 1:14:24', Current time (UTC): '2023/12/13 4:24:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 12:24:24.331 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 1:14:24', Current time (UTC): '2023/12/13 4:24:24'.
2023-12-13 12:24:24.331 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 1:14:24', Current time (UTC): '2023/12/13 4:24:24'.
2023-12-13 12:24:24.352 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-13 12:24:24.352 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-13 12:24:24.356 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-12-13 12:24:24.356 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-12-13 12:24:24.404 +08:00 [INF] CORS policy execution successful.
2023-12-13 12:24:24.405 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 1:14:24', Current time (UTC): '2023/12/13 4:24:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 12:24:24.405 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 1:14:24', Current time (UTC): '2023/12/13 4:24:24'.
2023-12-13 12:24:24.424 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.PostLogout (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:24.440 +08:00 [INF] Route matched with {action = "PostLogout", controller = "Account", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Boolean] PostLogout() on controller Yi.Framework.Rbac.Application.Services.AccountService (Yi.Framework.Rbac.Application).
2023-12-13 12:24:24.599 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Boolean'.
2023-12-13 12:24:24.616 +08:00 [INF] CORS policy execution successful.
2023-12-13 12:24:24.617 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
 ---> Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)
   --- End of inner exception stack trace ---
2023-12-13 12:24:24.617 +08:00 [INF] Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
2023-12-13 12:24:24.618 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-13 12:24:24.618 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-12-13 12:24:24.621 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.AccountService.PostLogout (Yi.Framework.Rbac.Application) in 176.8417ms
2023-12-13 12:24:24.621 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.PostLogout (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:24.644 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 12:24:24",
  "ExecutionDuration": 203,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "POST",
  "HttpStatusCode": 200,
  "Url": "/api/app/account/logout",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.AccountService",
      "MethodName": "PostLogout",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 12:24:24",
      "ExecutionDuration": 13,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 12:24:24.743 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.GetCaptchaImageAsync (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:24.745 +08:00 [INF] Route matched with {action = "GetCaptchaImage", controller = "Account", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Yi.Framework.Rbac.Application.Contracts.Dtos.Account.CaptchaImageDto] GetCaptchaImageAsync() on controller Yi.Framework.Rbac.Application.Services.AccountService (Yi.Framework.Rbac.Application).
2023-12-13 12:24:24.804 +08:00 [INF] Executing ObjectResult, writing value of type 'Yi.Framework.Rbac.Application.Contracts.Dtos.Account.CaptchaImageDto'.
2023-12-13 12:24:24.808 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.AccountService.GetCaptchaImageAsync (Yi.Framework.Rbac.Application) in 62.7742ms
2023-12-13 12:24:24.808 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.GetCaptchaImageAsync (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:24.808 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 12:24:24",
  "ExecutionDuration": 65,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/account/captcha-image",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.AccountService",
      "MethodName": "GetCaptchaImageAsync",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 12:24:24",
      "ExecutionDuration": 58,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 12:24:29.410 +08:00 [INF] CORS policy execution successful.
2023-12-13 12:24:29.410 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
 ---> Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)
   --- End of inner exception stack trace ---
2023-12-13 12:24:29.410 +08:00 [INF] Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
2023-12-13 12:24:29.411 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-13 12:24:29.411 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-12-13 12:24:29.632 +08:00 [INF] CORS policy execution successful.
2023-12-13 12:24:29.632 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
 ---> Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)
   --- End of inner exception stack trace ---
2023-12-13 12:24:29.632 +08:00 [INF] Bearer was not authenticated. Failure message: IDX14100: JWT is not well formed, there are no dots (.).
The token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.
2023-12-13 12:24:29.632 +08:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-12-13 12:24:29.632 +08:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-12-13 12:24:31.714 +08:00 [INF] CORS policy execution successful.
2023-12-13 12:24:31.715 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.PostLoginAsync (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:31.723 +08:00 [INF] Route matched with {action = "PostLogin", controller = "Account", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Object] PostLoginAsync(Yi.Framework.Rbac.Application.Contracts.Dtos.Account.LoginInputVo) on controller Yi.Framework.Rbac.Application.Services.AccountService (Yi.Framework.Rbac.Application).
2023-12-13 12:24:31.772 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`Name`,`Age`,`UserName`,`Password`,`Salt`,`Icon`,`Nick`,`Email`,`Ip`,`Address`,`Phone`,`Introduction`,`Remark`,`Sex`,`DeptId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State` FROM `User`   WHERE (( `UserName` = N'cc' ) AND ( `State` = 1 ))  AND ( `IsDeleted` = 0 )  ORDER BY DATETIME('now')    LIMIT 0,1
2023-12-13 12:24:31.789 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`Name`,`Age`,`UserName`,`Password`,`Salt`,`Icon`,`Nick`,`Email`,`Ip`,`Address`,`Phone`,`Introduction`,`Remark`,`Sex`,`DeptId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State` FROM `User`  WHERE `Id` = N'36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    AND ( `IsDeleted` = 0 ) 
2023-12-13 12:24:31.807 +08:00 [DBG] Yi-SQL执行:SELECT `UserId` as aid,`RoleId` as bid FROM `UserRole`  WHERE   `UserId` = '36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    
2023-12-13 12:24:31.812 +08:00 [DBG] Yi-SQL执行:SELECT * FROM `Role`  WHERE  ( `IsDeleted` = 0 )   AND   `Id` = null     AND  ( `IsDeleted` = 0 )  
2023-12-13 12:24:31.901 +08:00 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-13 12:24:31.903 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.AccountService.PostLoginAsync (Yi.Framework.Rbac.Application) in 179.5209ms
2023-12-13 12:24:31.903 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.PostLoginAsync (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:31.904 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 12:24:31",
  "ExecutionDuration": 189,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "POST",
  "HttpStatusCode": 200,
  "Url": "/api/app/account/login",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.AccountService",
      "MethodName": "PostLoginAsync",
      "Parameters": "{\"input\":{\"userName\":\"cc\",\"password\":\"123456\",\"uuid\":\"d91667e0-87f9-42c3-348f-3a0f73980bab\",\"code\":\"z3br\"}}",
      "ExecutionTime": "2023-12-13 12:24:31",
      "ExecutionDuration": 149,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 12:24:31.910 +08:00 [INF] CORS policy execution successful.
2023-12-13 12:24:31.914 +08:00 [INF] 用户【36532e8b-109b-c6dd-fa9e-3a0f5fe48619:cc】登入系统
2023-12-13 12:24:31.916 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:31.916 +08:00 [INF] Executing endpoint '/hub/main/negotiate'
2023-12-13 12:24:31.917 +08:00 [INF] Route matched with {action = "Get", controller = "Account", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto] Get() on controller Yi.Framework.Rbac.Application.Services.AccountService (Yi.Framework.Rbac.Application).
2023-12-13 12:24:31.919 +08:00 [INF] Executed endpoint '/hub/main/negotiate'
2023-12-13 12:24:31.920 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`Name`,`Age`,`UserName`,`Password`,`Salt`,`Icon`,`Nick`,`Email`,`Ip`,`Address`,`Phone`,`Introduction`,`Remark`,`Sex`,`DeptId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State` FROM `User`  WHERE `Id` = N'36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    AND ( `IsDeleted` = 0 ) 
2023-12-13 12:24:31.922 +08:00 [DBG] Yi-SQL执行:SELECT `UserId` as aid,`RoleId` as bid FROM `UserRole`  WHERE   `UserId` = '36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    
2023-12-13 12:24:31.924 +08:00 [DBG] Yi-SQL执行:SELECT * FROM `Role`  WHERE  ( `IsDeleted` = 0 )   AND   `Id` = null     AND  ( `IsDeleted` = 0 )  
2023-12-13 12:24:31.925 +08:00 [INF] Executing ObjectResult, writing value of type 'Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto'.
2023-12-13 12:24:31.927 +08:00 [INF] CORS policy execution successful.
2023-12-13 12:24:31.927 +08:00 [INF] Executing endpoint '/hub/main'
2023-12-13 12:24:31.932 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application) in 14.422ms
2023-12-13 12:24:31.932 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:31.932 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 12:24:31",
  "ExecutionDuration": 16,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/account",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.AccountService",
      "MethodName": "Get",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 12:24:31",
      "ExecutionDuration": 7,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 12:24:31.940 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.GetVue3Router (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:31.942 +08:00 [INF] Route matched with {action = "GetVue3Router", controller = "Account", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Collections.Generic.List`1[Yi.Framework.Rbac.Domain.Shared.Dtos.Vue3RouterDto]] GetVue3Router() on controller Yi.Framework.Rbac.Application.Services.AccountService (Yi.Framework.Rbac.Application).
2023-12-13 12:24:31.944 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`Name`,`Age`,`UserName`,`Password`,`Salt`,`Icon`,`Nick`,`Email`,`Ip`,`Address`,`Phone`,`Introduction`,`Remark`,`Sex`,`DeptId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State` FROM `User`  WHERE `Id` = N'36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    AND ( `IsDeleted` = 0 ) 
2023-12-13 12:24:31.945 +08:00 [DBG] Yi-SQL执行:SELECT `UserId` as aid,`RoleId` as bid FROM `UserRole`  WHERE   `UserId` = '36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    
2023-12-13 12:24:31.947 +08:00 [DBG] Yi-SQL执行:SELECT * FROM `Role`  WHERE  ( `IsDeleted` = 0 )   AND   `Id` = null     AND  ( `IsDeleted` = 0 )  
2023-12-13 12:24:31.950 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State`,`MenuName`,`MenuType`,`PermissionCode`,`ParentId`,`MenuIcon`,`Router`,`IsLink`,`IsCache`,`IsShow`,`Remark`,`Component`,`Query` FROM `Menu`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 12:24:31.956 +08:00 [DBG] Yi-SQL执行:INSERT INTO `LoginLog`  
           (`Id`,`CreationTime`,`LoginUser`,`LoginLocation`,`LoginIp`,`Browser`,`Os`,`LogMsg`,`CreatorId`)
     VALUES
           (N'e34c3d03-d02b-a8ef-8b78-3a0f739827b8','2023-12-13 12:24:31.931',N'cc',N'本地-本机',N'127.0.0.1',N'Other',N'Windows 10',N'cc登录系统',null) ;
2023-12-13 12:24:31.981 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Yi.Framework.Rbac.Domain.Shared.Dtos.Vue3RouterDto, Yi.Framework.Rbac.Domain.Shared, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 12:24:31.984 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.AccountService.GetVue3Router (Yi.Framework.Rbac.Application) in 41.488ms
2023-12-13 12:24:31.984 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.GetVue3Router (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:31.984 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 12:24:31",
  "ExecutionDuration": 44,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/account/Vue3Router",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.AccountService",
      "MethodName": "GetVue3Router",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 12:24:31",
      "ExecutionDuration": 38,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 12:24:31.990 +08:00 [INF] 2023/12/13 12:24:31：cc,vC4Th4dE0OKHLACUz3MCTQ连接服务端success，当前已连接1个
2023-12-13 12:24:34.019 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.DictionaryService.GetDicType (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:34.019 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.DeptService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:34.019 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.DictionaryService.GetDicType (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:34.020 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.UserService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:34.022 +08:00 [INF] Route matched with {action = "GetDicType", controller = "Dictionary", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Collections.Generic.List`1[Yi.Framework.Rbac.Application.Contracts.Dtos.Dictionary.DictionaryGetListOutputDto]] GetDicType(System.String) on controller Yi.Framework.Rbac.Application.Services.DictionaryService (Yi.Framework.Rbac.Application).
2023-12-13 12:24:34.022 +08:00 [INF] Route matched with {action = "GetDicType", controller = "Dictionary", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Collections.Generic.List`1[Yi.Framework.Rbac.Application.Contracts.Dtos.Dictionary.DictionaryGetListOutputDto]] GetDicType(System.String) on controller Yi.Framework.Rbac.Application.Services.DictionaryService (Yi.Framework.Rbac.Application).
2023-12-13 12:24:34.024 +08:00 [INF] Route matched with {action = "GetList", controller = "Dept", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Rbac.Application.Contracts.Dtos.Dept.DeptGetListOutputDto]] GetListAsync(Yi.Framework.Rbac.Application.Contracts.Dtos.Dept.DeptGetListInputVo) on controller Yi.Framework.Rbac.Application.Services.DeptService (Yi.Framework.Rbac.Application).
2023-12-13 12:24:34.024 +08:00 [INF] Route matched with {action = "GetList", controller = "User", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Rbac.Application.Contracts.Dtos.User.UserGetListOutputDto]] GetListAsync(Yi.Framework.Rbac.Application.Contracts.Dtos.User.UserGetListInputVo) on controller Yi.Framework.Rbac.Application.Services.UserService (Yi.Framework.Rbac.Application).
2023-12-13 12:24:34.042 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`OrderNum`,`State`,`Remark`,`ListClass`,`CssClass`,`DictType`,`DictLabel`,`DictValue`,`IsDefault`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Dictionary`  WHERE (( `DictType` = N'sys_user_sex' ) AND ( `State` = 1 ))  AND ( `IsDeleted` = 0 ) 
2023-12-13 12:24:34.054 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`OrderNum`,`State`,`Remark`,`ListClass`,`CssClass`,`DictType`,`DictLabel`,`DictValue`,`IsDefault`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Dictionary`  WHERE (( `DictType` = N'sys_normal_disable' ) AND ( `State` = 1 ))  AND ( `IsDeleted` = 0 ) 
2023-12-13 12:24:34.074 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Yi.Framework.Rbac.Application.Contracts.Dtos.Dictionary.DictionaryGetListOutputDto, Yi.Framework.Rbac.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 12:24:34.074 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[Yi.Framework.Rbac.Application.Contracts.Dtos.Dictionary.DictionaryGetListOutputDto, Yi.Framework.Rbac.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 12:24:34.077 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.DictionaryService.GetDicType (Yi.Framework.Rbac.Application) in 54.6573ms
2023-12-13 12:24:34.077 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.DictionaryService.GetDicType (Yi.Framework.Rbac.Application) in 54.5526ms
2023-12-13 12:24:34.077 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.DictionaryService.GetDicType (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:34.077 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.DictionaryService.GetDicType (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:34.077 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 12:24:34",
  "ExecutionDuration": 57,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/dictionary/dic-type/sys_user_sex",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.DictionaryService",
      "MethodName": "GetDicType",
      "Parameters": "{\"dicType\":\"sys_user_sex\"}",
      "ExecutionTime": "2023-12-13 12:24:34",
      "ExecutionDuration": 45,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 12:24:34.077 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 12:24:34",
  "ExecutionDuration": 57,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/dictionary/dic-type/sys_normal_disable",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.DictionaryService",
      "MethodName": "GetDicType",
      "Parameters": "{\"dicType\":\"sys_normal_disable\"}",
      "ExecutionTime": "2023-12-13 12:24:34",
      "ExecutionDuration": 43,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 12:24:34.084 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `Id`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State`,`DeptName`,`DeptCode`,`Leader`,`ParentId`,`Remark` FROM `Dept`  WHERE ( `IsDeleted` = 0 ) ) CountTable 
2023-12-13 12:24:34.085 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State`,`DeptName`,`DeptCode`,`Leader`,`ParentId`,`Remark` FROM `Dept`   WHERE ( `IsDeleted` = 0 )  ORDER BY `OrderNum` ASC LIMIT 0,10
2023-12-13 12:24:34.094 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Rbac.Application.Contracts.Dtos.Dept.DeptGetListOutputDto, Yi.Framework.Rbac.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 12:24:34.097 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.DeptService.GetListAsync (Yi.Framework.Rbac.Application) in 73.3655ms
2023-12-13 12:24:34.097 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.DeptService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:34.098 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 12:24:34",
  "ExecutionDuration": 78,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/dept",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.DeptService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"id\":\"00000000-0000-0000-0000-000000000000\",\"state\":null,\"deptName\":null,\"deptCode\":null,\"leader\":null,\"startTime\":null,\"endTime\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 12:24:34",
      "ExecutionDuration": 25,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 12:24:34.100 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `user`.`Id` AS `Id` ,`user`.`Name` AS `Name` ,`user`.`Age` AS `Age` ,`user`.`UserName` AS `UserName` ,`user`.`Icon` AS `Icon` ,`user`.`Nick` AS `Nick` ,`user`.`Email` AS `Email` ,`user`.`Ip` AS `Ip` ,`user`.`Address` AS `Address` ,`user`.`Phone` AS `Phone` ,`user`.`Introduction` AS `Introduction` ,`user`.`Remark` AS `Remark` ,`user`.`Sex` AS `Sex` ,`user`.`DeptId` AS `DeptId` ,`user`.`CreationTime` AS `CreationTime` ,`user`.`CreatorId` AS `CreatorId` ,`user`.`State` AS `State` ,`dept`.`DeptName` AS `DeptName` FROM  (SELECT * FROM  (SELECT `Id`,`IsDeleted`,`Name`,`Age`,`UserName`,`Password`,`Salt`,`Icon`,`Nick`,`Email`,`Ip`,`Address`,`Phone`,`Introduction`,`Remark`,`Sex`,`DeptId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State` FROM `User`  WHERE ( `State` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `user` Left JOIN `Dept` `dept` ON ( `user`.`DeptId` = `dept`.`Id` ) AND ( `dept`.`IsDeleted` = 0 )   WHERE ( `user`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 12:24:34.101 +08:00 [DBG] Yi-SQL执行:SELECT `user`.`Id` AS `Id` ,`user`.`Name` AS `Name` ,`user`.`Age` AS `Age` ,`user`.`UserName` AS `UserName` ,`user`.`Icon` AS `Icon` ,`user`.`Nick` AS `Nick` ,`user`.`Email` AS `Email` ,`user`.`Ip` AS `Ip` ,`user`.`Address` AS `Address` ,`user`.`Phone` AS `Phone` ,`user`.`Introduction` AS `Introduction` ,`user`.`Remark` AS `Remark` ,`user`.`Sex` AS `Sex` ,`user`.`DeptId` AS `DeptId` ,`user`.`CreationTime` AS `CreationTime` ,`user`.`CreatorId` AS `CreatorId` ,`user`.`State` AS `State` ,`dept`.`DeptName` AS `DeptName` FROM  (SELECT * FROM  (SELECT `Id`,`IsDeleted`,`Name`,`Age`,`UserName`,`Password`,`Salt`,`Icon`,`Nick`,`Email`,`Ip`,`Address`,`Phone`,`Introduction`,`Remark`,`Sex`,`DeptId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State` FROM `User`  WHERE ( `State` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `user` Left JOIN `Dept` `dept` ON ( `user`.`DeptId` = `dept`.`Id` ) AND ( `dept`.`IsDeleted` = 0 )    WHERE ( `user`.`IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 12:24:34.104 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Rbac.Application.Contracts.Dtos.User.UserGetListOutputDto, Yi.Framework.Rbac.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 12:24:34.108 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.UserService.GetListAsync (Yi.Framework.Rbac.Application) in 83.991ms
2023-12-13 12:24:34.108 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.UserService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 12:24:34.108 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 12:24:34",
  "ExecutionDuration": 88,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/user",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.UserService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"name\":null,\"userName\":null,\"phone\":null,\"state\":true,\"deptId\":null,\"ids\":null,\"startTime\":null,\"endTime\":null,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 12:24:34",
      "ExecutionDuration": 32,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 12:24:35.826 +08:00 [INF] 用户cc离开了，当前已连接0个
2023-12-13 12:24:35.827 +08:00 [INF] Executed endpoint '/hub/main'
2023-12-13 16:17:09.796 +08:00 [INF] Yi框架-Abp.vNext，启动！
2023-12-13 16:17:14.047 +08:00 [INF] Loaded ABP modules:
2023-12-13 16:17:14.047 +08:00 [INF] - Yi.Abp.Web.YiAbpWebModule
2023-12-13 16:17:14.047 +08:00 [INF]   - Yi.Abp.SqlsugarCore.YiAbpSqlSugarCoreModule
2023-12-13 16:17:14.047 +08:00 [INF]     - Yi.Abp.Domain.YiAbpDomainModule
2023-12-13 16:17:14.047 +08:00 [INF]       - Yi.Abp.Domain.Shared.YiAbpDomainSharedModule
2023-12-13 16:17:14.047 +08:00 [INF]         - Yi.Framework.Rbac.Domain.Shared.YiFrameworkRbacDomainSharedModule
2023-12-13 16:17:14.047 +08:00 [INF]           - Volo.Abp.Domain.AbpDddDomainSharedModule
2023-12-13 16:17:14.047 +08:00 [INF]             - Volo.Abp.MultiTenancy.AbpMultiTenancyAbstractionsModule
2023-12-13 16:17:14.047 +08:00 [INF]               - Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemModule
2023-12-13 16:17:14.047 +08:00 [INF]               - Volo.Abp.Localization.AbpLocalizationModule
2023-12-13 16:17:14.047 +08:00 [INF]                 - Volo.Abp.Settings.AbpSettingsModule
2023-12-13 16:17:14.047 +08:00 [INF]                   - Volo.Abp.Localization.AbpLocalizationAbstractionsModule
2023-12-13 16:17:14.047 +08:00 [INF]                   - Volo.Abp.Security.AbpSecurityModule
2023-12-13 16:17:14.047 +08:00 [INF]                   - Volo.Abp.Data.AbpDataModule
2023-12-13 16:17:14.047 +08:00 [INF]                     - Volo.Abp.ObjectExtending.AbpObjectExtendingModule
2023-12-13 16:17:14.047 +08:00 [INF]                       - Volo.Abp.Validation.AbpValidationAbstractionsModule
2023-12-13 16:17:14.047 +08:00 [INF]                     - Volo.Abp.Uow.AbpUnitOfWorkModule
2023-12-13 16:17:14.047 +08:00 [INF]                     - Volo.Abp.EventBus.Abstractions.AbpEventBusAbstractionsModule
2023-12-13 16:17:14.047 +08:00 [INF]                 - Volo.Abp.Threading.AbpThreadingModule
2023-12-13 16:17:14.047 +08:00 [INF]           - Yi.Framework.Mapster.YiFrameworkMapsterModule
2023-12-13 16:17:14.047 +08:00 [INF]             - Yi.Framework.Core.YiFrameworkCoreModule
2023-12-13 16:17:14.047 +08:00 [INF]             - Volo.Abp.ObjectMapping.AbpObjectMappingModule
2023-12-13 16:17:14.047 +08:00 [INF]         - Yi.Framework.Bbs.Domain.Shared.YiFrameworkBbsDomainSharedModule
2023-12-13 16:17:14.047 +08:00 [INF]       - Yi.Framework.Rbac.Domain.YiFrameworkRbacDomainModule
2023-12-13 16:17:14.047 +08:00 [INF]         - Volo.Abp.AspNetCore.SignalR.AbpAspNetCoreSignalRModule
2023-12-13 16:17:14.047 +08:00 [INF]           - Volo.Abp.AspNetCore.AbpAspNetCoreModule
2023-12-13 16:17:14.047 +08:00 [INF]             - Volo.Abp.Auditing.AbpAuditingModule
2023-12-13 16:17:14.047 +08:00 [INF]               - Volo.Abp.Json.AbpJsonModule
2023-12-13 16:17:14.047 +08:00 [INF]                 - Volo.Abp.Json.SystemTextJson.AbpJsonSystemTextJsonModule
2023-12-13 16:17:14.047 +08:00 [INF]                   - Volo.Abp.Json.AbpJsonAbstractionsModule
2023-12-13 16:17:14.048 +08:00 [INF]                   - Volo.Abp.Timing.AbpTimingModule
2023-12-13 16:17:14.048 +08:00 [INF]               - Volo.Abp.MultiTenancy.AbpMultiTenancyModule
2023-12-13 16:17:14.048 +08:00 [INF]               - Volo.Abp.Auditing.AbpAuditingContractsModule
2023-12-13 16:17:14.048 +08:00 [INF]             - Volo.Abp.Http.AbpHttpModule
2023-12-13 16:17:14.048 +08:00 [INF]               - Volo.Abp.Http.AbpHttpAbstractionsModule
2023-12-13 16:17:14.048 +08:00 [INF]               - Volo.Abp.Minify.AbpMinifyModule
2023-12-13 16:17:14.048 +08:00 [INF]             - Volo.Abp.Authorization.AbpAuthorizationModule
2023-12-13 16:17:14.048 +08:00 [INF]               - Volo.Abp.Authorization.AbpAuthorizationAbstractionsModule
2023-12-13 16:17:14.048 +08:00 [INF]             - Volo.Abp.Validation.AbpValidationModule
2023-12-13 16:17:14.048 +08:00 [INF]             - Volo.Abp.ExceptionHandling.AbpExceptionHandlingModule
2023-12-13 16:17:14.048 +08:00 [INF]         - Volo.Abp.Domain.AbpDddDomainModule
2023-12-13 16:17:14.048 +08:00 [INF]           - Volo.Abp.EventBus.AbpEventBusModule
2023-12-13 16:17:14.048 +08:00 [INF]             - Volo.Abp.Guids.AbpGuidsModule
2023-12-13 16:17:14.048 +08:00 [INF]             - Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule
2023-12-13 16:17:14.048 +08:00 [INF]             - Volo.Abp.DistributedLocking.AbpDistributedLockingAbstractionsModule
2023-12-13 16:17:14.048 +08:00 [INF]           - Volo.Abp.Specifications.AbpSpecificationsModule
2023-12-13 16:17:14.048 +08:00 [INF]           - Volo.Abp.Caching.AbpCachingModule
2023-12-13 16:17:14.048 +08:00 [INF]             - Volo.Abp.Serialization.AbpSerializationModule
2023-12-13 16:17:14.048 +08:00 [INF]       - Yi.Framework.Bbs.Domain.YiFrameworkBbsDomainModule
2023-12-13 16:17:14.048 +08:00 [INF]     - Yi.Framework.Rbac.SqlSugarCore.YiFrameworkRbacSqlSugarCoreModule
2023-12-13 16:17:14.048 +08:00 [INF]       - Yi.Framework.SqlSugarCore.YiFrameworkSqlSugarCoreModule
2023-12-13 16:17:14.048 +08:00 [INF]     - Yi.Framework.Bbs.SqlSugarCore.YiFrameworkBbsSqlSugarCoreModule
2023-12-13 16:17:14.048 +08:00 [INF]   - Yi.Abp.Application.YiAbpApplicationModule
2023-12-13 16:17:14.048 +08:00 [INF]     - Yi.Abp.Application.Contracts.YiAbpApplicationContractsModule
2023-12-13 16:17:14.048 +08:00 [INF]       - Yi.Framework.Rbac.Application.Contracts.YiFrameworkRbacApplicationContractsModule
2023-12-13 16:17:14.048 +08:00 [INF]         - Yi.Framework.Ddd.Application.Contracts.YiFrameworkDddApplicationContractsModule
2023-12-13 16:17:14.048 +08:00 [INF]           - Volo.Abp.Application.AbpDddApplicationContractsModule
2023-12-13 16:17:14.048 +08:00 [INF]       - Yi.Framework.Bbs.Application.Contracts.YiFrameworkBbsApplicationContractsModule
2023-12-13 16:17:14.048 +08:00 [INF]     - Yi.Framework.Rbac.Application.YiFrameworkRbacApplicationModule
2023-12-13 16:17:14.048 +08:00 [INF]       - Yi.Framework.Ddd.Application.YiFrameworkDddApplicationModule
2023-12-13 16:17:14.048 +08:00 [INF]         - Volo.Abp.Application.AbpDddApplicationModule
2023-12-13 16:17:14.048 +08:00 [INF]           - Volo.Abp.Features.AbpFeaturesModule
2023-12-13 16:17:14.048 +08:00 [INF]           - Volo.Abp.GlobalFeatures.AbpGlobalFeaturesModule
2023-12-13 16:17:14.048 +08:00 [INF]       - Volo.Abp.BackgroundWorkers.Quartz.AbpBackgroundWorkersQuartzModule
2023-12-13 16:17:14.048 +08:00 [INF]         - Volo.Abp.Quartz.AbpQuartzModule
2023-12-13 16:17:14.048 +08:00 [INF]     - Yi.Framework.Bbs.Application.YiFrameworkBbsApplicationModule
2023-12-13 16:17:14.048 +08:00 [INF]   - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcModule
2023-12-13 16:17:14.048 +08:00 [INF]     - Volo.Abp.ApiVersioning.AbpApiVersioningAbstractionsModule
2023-12-13 16:17:14.048 +08:00 [INF]     - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcContractsModule
2023-12-13 16:17:14.048 +08:00 [INF]     - Volo.Abp.UI.Navigation.AbpUiNavigationModule
2023-12-13 16:17:14.048 +08:00 [INF]       - Volo.Abp.UI.AbpUiModule
2023-12-13 16:17:14.048 +08:00 [INF]   - Volo.Abp.Autofac.AbpAutofacModule
2023-12-13 16:17:14.048 +08:00 [INF]     - Volo.Abp.Castle.AbpCastleCoreModule
2023-12-13 16:17:14.048 +08:00 [INF]   - Volo.Abp.Swashbuckle.AbpSwashbuckleModule
2023-12-13 16:17:14.048 +08:00 [INF]   - Volo.Abp.AspNetCore.Serilog.AbpAspNetCoreSerilogModule
2023-12-13 16:17:14.048 +08:00 [INF]   - Volo.Abp.AspNetCore.Authentication.JwtBearer.AbpAspNetCoreAuthenticationJwtBearerModule
2023-12-13 16:17:14.048 +08:00 [INF]   - Yi.Framework.AspNetCore.YiFrameworkAspNetCoreModule
2023-12-13 16:17:14.284 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.307 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.309 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.310 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.311 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.314 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.316 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.318 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.319 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.321 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.321 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.323 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.325 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.326 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.327 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.328 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.332 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.333 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.335 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.337 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.338 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.339 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.340 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:14.340 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:17:15.580 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Dept`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:17:15.595 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Dictionary`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:17:15.598 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `DictionaryType`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:17:15.601 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Menu`  WHERE ( `MenuName` = N'系统管理' )  AND ( `IsDeleted` = 0 ) 
2023-12-13 16:17:15.604 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Post`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:17:15.605 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Role`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:17:15.608 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `User`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:17:15.971 +08:00 [INF] User profile is available. Using 'C:\Users\chenchun\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-13 16:17:16.025 +08:00 [INF] Initialized all ABP modules.
2023-12-13 16:17:16.133 +08:00 [INF] Now listening on: http://[::]:19001
2023-12-13 16:17:16.133 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-13 16:17:16.133 +08:00 [INF] Hosting environment: Development
2023-12-13 16:17:16.133 +08:00 [INF] Content root path: E:\code\csharp\Yi\Yi.Abp.Net8\src\Yi.Abp.Web
2023-12-13 16:17:21.205 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 16:17:21.243 +08:00 [INF] Route matched with {action = "GetList", controller = "Config", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListOutputDto]] GetListAsync(Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListInputVo) on controller Yi.Framework.Rbac.Application.Services.ConfigService (Yi.Framework.Rbac.Application).
2023-12-13 16:17:21.338 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Config`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 16:17:21.342 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`ConfigName`,`ConfigKey`,`ConfigValue`,`ConfigType`,`OrderNum`,`Remark`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Config`   WHERE ( `IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 16:17:21.361 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListOutputDto, Yi.Framework.Rbac.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:17:21.410 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application) in 163.5192ms
2023-12-13 16:17:21.410 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 16:17:21.427 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:17:21",
  "ExecutionDuration": 210,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/config",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.ConfigService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"configName\":null,\"configKey\":null,\"startTime\":null,\"endTime\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:17:21",
      "ExecutionDuration": 47,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:17:23.132 +08:00 [INF] CORS policy execution failed.
2023-12-13 16:17:23.132 +08:00 [INF] Request origin http://127.0.0.1:18001 does not have permission to access the resource.
2023-12-13 16:17:23.133 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.PostLoginAsync (Yi.Framework.Rbac.Application)'
2023-12-13 16:17:23.135 +08:00 [INF] Route matched with {action = "PostLogin", controller = "Account", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[System.Object] PostLoginAsync(Yi.Framework.Rbac.Application.Contracts.Dtos.Account.LoginInputVo) on controller Yi.Framework.Rbac.Application.Services.AccountService (Yi.Framework.Rbac.Application).
2023-12-13 16:17:23.257 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`Name`,`Age`,`UserName`,`Password`,`Salt`,`Icon`,`Nick`,`Email`,`Ip`,`Address`,`Phone`,`Introduction`,`Remark`,`Sex`,`DeptId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State` FROM `User`   WHERE (( `UserName` = N'cc' ) AND ( `State` = 1 ))  AND ( `IsDeleted` = 0 )  ORDER BY DATETIME('now')    LIMIT 0,1
2023-12-13 16:17:23.275 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`Name`,`Age`,`UserName`,`Password`,`Salt`,`Icon`,`Nick`,`Email`,`Ip`,`Address`,`Phone`,`Introduction`,`Remark`,`Sex`,`DeptId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State` FROM `User`  WHERE `Id` = N'36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    AND ( `IsDeleted` = 0 ) 
2023-12-13 16:17:23.298 +08:00 [DBG] Yi-SQL执行:SELECT `UserId` as aid,`RoleId` as bid FROM `UserRole`  WHERE   `UserId` = '36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    
2023-12-13 16:17:23.303 +08:00 [DBG] Yi-SQL执行:SELECT * FROM `Role`  WHERE  ( `IsDeleted` = 0 )   AND   `Id` = null     AND  ( `IsDeleted` = 0 )  
2023-12-13 16:17:23.436 +08:00 [INF] Executing ObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-12-13 16:17:23.438 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.AccountService.PostLoginAsync (Yi.Framework.Rbac.Application) in 302.3052ms
2023-12-13 16:17:23.438 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.PostLoginAsync (Yi.Framework.Rbac.Application)'
2023-12-13 16:17:23.438 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:17:23",
  "ExecutionDuration": 305,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "POST",
  "HttpStatusCode": 200,
  "Url": "/api/app/account/login",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.AccountService",
      "MethodName": "PostLoginAsync",
      "Parameters": "{\"input\":{\"userName\":\"cc\",\"password\":\"123456\",\"uuid\":\"\",\"code\":\"\"}}",
      "ExecutionTime": "2023-12-13 16:17:23",
      "ExecutionDuration": 195,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:17:23.447 +08:00 [INF] 用户【36532e8b-109b-c6dd-fa9e-3a0f5fe48619:cc】登入系统
2023-12-13 16:17:23.470 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 16:17:23.472 +08:00 [INF] Route matched with {action = "Get", controller = "Account", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto] Get() on controller Yi.Framework.Rbac.Application.Services.AccountService (Yi.Framework.Rbac.Application).
2023-12-13 16:17:23.472 +08:00 [DBG] Yi-SQL执行:INSERT INTO `LoginLog`  
           (`Id`,`CreationTime`,`LoginUser`,`LoginLocation`,`LoginIp`,`Browser`,`Os`,`LogMsg`,`CreatorId`)
     VALUES
           (N'f44ed2e7-aeff-45b1-2643-3a0f746d5802','2023-12-13 16:17:23.461',N'cc',N'本地-本机',N'127.0.0.1',N'Other',N'Windows 10',N'cc登录系统',null) ;
2023-12-13 16:17:23.474 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`Name`,`Age`,`UserName`,`Password`,`Salt`,`Icon`,`Nick`,`Email`,`Ip`,`Address`,`Phone`,`Introduction`,`Remark`,`Sex`,`DeptId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State` FROM `User`  WHERE `Id` = N'36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    AND ( `IsDeleted` = 0 ) 
2023-12-13 16:17:23.477 +08:00 [DBG] Yi-SQL执行:SELECT `UserId` as aid,`RoleId` as bid FROM `UserRole`  WHERE   `UserId` = '36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    
2023-12-13 16:17:23.632 +08:00 [DBG] Yi-SQL执行:SELECT * FROM `Role`  WHERE  ( `IsDeleted` = 0 )   AND   `Id` = null     AND  ( `IsDeleted` = 0 )  
2023-12-13 16:17:23.633 +08:00 [INF] Executing ObjectResult, writing value of type 'Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto'.
2023-12-13 16:17:23.641 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application) in 168.6856ms
2023-12-13 16:17:23.641 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 16:17:23.641 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:17:23",
  "ExecutionDuration": 171,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/account",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.AccountService",
      "MethodName": "Get",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:17:23",
      "ExecutionDuration": 160,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:17:23.649 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 16:17:23.649 +08:00 [INF] Route matched with {action = "Get", controller = "Account", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto] Get() on controller Yi.Framework.Rbac.Application.Services.AccountService (Yi.Framework.Rbac.Application).
2023-12-13 16:17:23.651 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`Name`,`Age`,`UserName`,`Password`,`Salt`,`Icon`,`Nick`,`Email`,`Ip`,`Address`,`Phone`,`Introduction`,`Remark`,`Sex`,`DeptId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State` FROM `User`  WHERE `Id` = N'36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    AND ( `IsDeleted` = 0 ) 
2023-12-13 16:17:23.653 +08:00 [DBG] Yi-SQL执行:SELECT `UserId` as aid,`RoleId` as bid FROM `UserRole`  WHERE   `UserId` = '36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    
2023-12-13 16:17:23.654 +08:00 [DBG] Yi-SQL执行:SELECT * FROM `Role`  WHERE  ( `IsDeleted` = 0 )   AND   `Id` = null     AND  ( `IsDeleted` = 0 )  
2023-12-13 16:17:23.654 +08:00 [INF] Executing ObjectResult, writing value of type 'Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto'.
2023-12-13 16:17:23.655 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application) in 5.0831ms
2023-12-13 16:17:23.655 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 16:17:23.655 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:17:23",
  "ExecutionDuration": 5,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/account",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.AccountService",
      "MethodName": "Get",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:17:23",
      "ExecutionDuration": 4,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:17:23.974 +08:00 [INF] CORS policy execution failed.
2023-12-13 16:17:23.974 +08:00 [INF] Request origin http://127.0.0.1:18001 does not have permission to access the resource.
2023-12-13 16:17:23.997 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:17:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:17:23.997 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:17:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:17:23.997 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:17:23'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:17:23.998 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:17:23'.
2023-12-13 16:17:23.998 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:17:23'.
2023-12-13 16:17:23.998 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:17:23'.
2023-12-13 16:17:23.998 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:17:23.998 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:17:23.998 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:17:24.000 +08:00 [INF] Route matched with {action = "Access", controller = "AccessLog", area = ""}. Executing controller action with signature System.Threading.Tasks.Task AccessAsync() on controller Yi.Framework.Bbs.Application.Services.AccessLogService (Yi.Framework.Bbs.Application).
2023-12-13 16:17:24.000 +08:00 [INF] Route matched with {action = "GetWeek", controller = "AccessLog", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Yi.Framework.Bbs.Application.Contracts.Dtos.AccessLog.AccessLogDto[]] GetWeekAsync() on controller Yi.Framework.Bbs.Application.Services.AccessLogService (Yi.Framework.Bbs.Application).
2023-12-13 16:17:24.020 +08:00 [INF] Route matched with {action = "GetList", controller = "Plate", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.PlateService (Yi.Framework.Bbs.Application).
2023-12-13 16:17:24.036 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Number`,`LastModificationTime`,`CreationTime` FROM `AccessLog`    ORDER BY `CreationTime` DESC LIMIT 0,7
2023-12-13 16:17:24.041 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Plate`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 16:17:24.042 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Code`,`Name`,`Logo`,`Introduction`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Plate`   WHERE ( `IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 16:17:24.044 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Number`,`LastModificationTime`,`CreationTime` FROM `AccessLog`    ORDER BY `CreationTime` DESC LIMIT 0,1
2023-12-13 16:17:24.046 +08:00 [DBG] Yi-SQL执行:INSERT INTO `AccessLog`  
           (`Id`,`Number`,`LastModificationTime`,`CreationTime`)
     VALUES
           (N'947fd485-3518-1852-96fd-3a0f746d5a4e',0,null,'2023-12-13 16:17:24.046') ;
2023-12-13 16:17:24.048 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application) in 47.4771ms
2023-12-13 16:17:24.048 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:17:24.048 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:17:23",
  "ExecutionDuration": 49,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "POST",
  "HttpStatusCode": 204,
  "Url": "/api/app/access-log",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.AccessLogService",
      "MethodName": "AccessAsync",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:17:24",
      "ExecutionDuration": 28,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:17:24.049 +08:00 [INF] Executing ObjectResult, writing value of type 'Yi.Framework.Bbs.Application.Contracts.Dtos.AccessLog.AccessLogDto[]'.
2023-12-13 16:17:24.051 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application) in 51.0877ms
2023-12-13 16:17:24.051 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:17:24.052 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:17:23",
  "ExecutionDuration": 53,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/access-log/week",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.AccessLogService",
      "MethodName": "GetWeekAsync",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:17:24",
      "ExecutionDuration": 30,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:17:24.055 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:17:24.059 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application) in 39.0192ms
2023-12-13 16:17:24.059 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:17:24.059 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:17:23",
  "ExecutionDuration": 61,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/plate",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.PlateService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"name\":null,\"code\":null,\"startTime\":null,\"endTime\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:17:24",
      "ExecutionDuration": 18,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:17:24.107 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:17:24'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:17:24.107 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:17:24'.
2023-12-13 16:17:24.107 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:17:24.112 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:17:24.417 +08:00 [ERR] ---------- RemoteServiceErrorInfo ----------
{
  "code": null,
  "message": "对不起,在处理你的请求期间,产生了一个服务器内部错误!",
  "details": null,
  "data": {},
  "validationErrors": null
}

2023-12-13 16:17:24.418 +08:00 [ERR] 中文提示 : 表达式错误 value(Castle.Proxies.DiscussServiceProxy).CurrentUser.Id 表达式中出现了空引用 检查参数是否为null 
English Message : Expression error value(Castle.Proxies.DiscussServiceProxy).CurrentUser.Id expression, An empty reference appears in the expression to check if the parameter is null 
SqlSugar.SqlSugarException: 中文提示 : 表达式错误 value(Castle.Proxies.DiscussServiceProxy).CurrentUser.Id 表达式中出现了空引用 检查参数是否为null 
English Message : Expression error value(Castle.Proxies.DiscussServiceProxy).CurrentUser.Id expression, An empty reference appears in the expression to check if the parameter is null 
   at SqlSugar.Check.ExceptionEasy(String enMessage, String cnMessage)
   at SqlSugar.ExpressionTool.GetMemberValue(MemberInfo member, Expression expression)
   at SqlSugar.MemberExpressionResolve.ResolveMemberValue(ExpressionParameter parameter, ExpressionParameter baseParameter, Nullable`1 isLeft, Boolean isSetTempData, MemberExpression expression)
   at SqlSugar.MemberExpressionResolve.ResolveMemberValue(ExpressionParameter parameter, ExpressionParameter baseParameter, MemberExpression expression, Nullable`1 isLeft, Boolean isSetTempData)
   at SqlSugar.MemberExpressionResolve..ctor(ExpressionParameter parameter)
   at SqlSugar.BaseResolve.Start()
   at SqlSugar.BinaryExpressionResolve.Right(ExpressionParameter parameter, String operatorValue, Boolean isEqual, Expression rightExpression, Boolean lsbs)
   at SqlSugar.BinaryExpressionResolve.DefaultBinary(ExpressionParameter parameter, BinaryExpression expression, String operatorValue)
   at SqlSugar.BinaryExpressionResolve.Other(ExpressionParameter parameter)
   at SqlSugar.BinaryExpressionResolve..ctor(ExpressionParameter parameter)
   at SqlSugar.BaseResolve.Start()
   at SqlSugar.BinaryExpressionResolve.Left(BinaryExpression expression, Expression leftExpression)
   at SqlSugar.BinaryExpressionResolve.DefaultBinary(ExpressionParameter parameter, BinaryExpression expression, String operatorValue)
   at SqlSugar.BinaryExpressionResolve.Other(ExpressionParameter parameter)
   at SqlSugar.BinaryExpressionResolve..ctor(ExpressionParameter parameter)
   at SqlSugar.BaseResolve.Start()
   at SqlSugar.LambdaExpressionResolve..ctor(ExpressionParameter parameter)
   at SqlSugar.BaseResolve.Start()
   at SqlSugar.ExpressionContext.Resolve(Expression expression, ResolveExpressType resolveType)
   at SqlSugar.SubTools.GetMethodValue(ExpressionContext context, Expression item, ResolveExpressType type)
   at SqlSugar.SubWhere.GetValue(Expression expression)
   at SqlSugar.SubResolve.<>c__DisplayClass10_0.<GetSubItems>b__6(ISubOperation it)
   at System.Linq.Enumerable.SelectListIterator`2.Fill(ReadOnlySpan`1 source, Span`1 destination, Func`2 func)
   at System.Linq.Enumerable.SelectListIterator`2.ToList()
   at SqlSugar.SubResolve.GetSubItems()
   at SqlSugar.SubResolve.GetSql()
   at SqlSugar.MethodCallExpressionResolve..ctor(ExpressionParameter parameter)
   at SqlSugar.BaseResolve.Start()
   at SqlSugar.BaseResolve.ResloveBoolMethod(ExpressionParameter parameter, Expression item, String asName)
   at SqlSugar.BaseResolve.ResolveNewExpressions(ExpressionParameter parameter, Expression item, String asName)
   at SqlSugar.MemberInitExpressionResolve.Select(MemberInitExpression expression, ExpressionParameter parameter, Boolean isSingle)
   at SqlSugar.MemberInitExpressionResolve..ctor(ExpressionParameter parameter)
   at SqlSugar.BaseResolve.Start()
   at SqlSugar.LambdaExpressionResolve..ctor(ExpressionParameter parameter)
   at SqlSugar.BaseResolve.Start()
   at SqlSugar.ExpressionContext.Resolve(Expression expression, ResolveExpressType resolveType)
   at SqlSugar.QueryBuilder.GetExpressionValue(Expression expression, ResolveExpressType resolveType)
   at SqlSugar.QueryBuilder.GetSelectValueByExpression()
   at SqlSugar.SqliteQueryBuilder.get_GetSelectValue()
   at SqlSugar.QueryableProvider`2.Select[TResult](Expression`1 expression, Boolean isAutoFill)
   at Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync(DiscussGetListInputVo input) in E:\code\csharp\Yi\Yi.Abp.Net8\module\bbs\Yi.Framework.Bbs.Application\Services\DiscussService.cs:line 77
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.GlobalFeatures.GlobalFeatureInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method1376(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2023-12-13 16:17:24.422 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2023-12-13 16:17:24.426 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 313.9118ms
2023-12-13 16:17:24.426 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:17:24.430 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:17:24",
  "ExecutionDuration": 319,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 500,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":null,\"isTop\":true,\"type\":0,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:17:24",
      "ExecutionDuration": 272,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [
    {
      "InnerException": null,
      "StackTrace": null,
      "Source": null,
      "Sql": null,
      "Parametres": null,
      "Message": "中文提示 : 表达式错误 value(Castle.Proxies.DiscussServiceProxy).CurrentUser.Id 表达式中出现了空引用 检查参数是否为null \r\nEnglish Message : Expression error value(Castle.Proxies.DiscussServiceProxy).CurrentUser.Id expression, An empty reference appears in the expression to check if the parameter is null ",
      "Data": {},
      "HelpLink": null,
      "HResult": -2146233088
    }
  ],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:17:29.687 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 16:17:29.688 +08:00 [INF] Route matched with {action = "GetList", controller = "Config", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListOutputDto]] GetListAsync(Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListInputVo) on controller Yi.Framework.Rbac.Application.Services.ConfigService (Yi.Framework.Rbac.Application).
2023-12-13 16:17:29.696 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Config`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 16:17:29.697 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`ConfigName`,`ConfigKey`,`ConfigValue`,`ConfigType`,`OrderNum`,`Remark`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Config`   WHERE ( `IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 16:17:29.697 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListOutputDto, Yi.Framework.Rbac.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:17:29.698 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application) in 9.3468ms
2023-12-13 16:17:29.698 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 16:17:29.703 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:17:29",
  "ExecutionDuration": 11,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/config",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.ConfigService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"configName\":null,\"configKey\":null,\"startTime\":null,\"endTime\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:17:29",
      "ExecutionDuration": 7,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:17:29.707 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 16:17:29.708 +08:00 [INF] Route matched with {action = "Get", controller = "Account", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto] Get() on controller Yi.Framework.Rbac.Application.Services.AccountService (Yi.Framework.Rbac.Application).
2023-12-13 16:17:29.719 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`Name`,`Age`,`UserName`,`Password`,`Salt`,`Icon`,`Nick`,`Email`,`Ip`,`Address`,`Phone`,`Introduction`,`Remark`,`Sex`,`DeptId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State` FROM `User`  WHERE `Id` = N'36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    AND ( `IsDeleted` = 0 ) 
2023-12-13 16:17:29.721 +08:00 [DBG] Yi-SQL执行:SELECT `UserId` as aid,`RoleId` as bid FROM `UserRole`  WHERE   `UserId` = '36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    
2023-12-13 16:17:29.722 +08:00 [DBG] Yi-SQL执行:SELECT * FROM `Role`  WHERE  ( `IsDeleted` = 0 )   AND   `Id` = null     AND  ( `IsDeleted` = 0 )  
2023-12-13 16:17:29.723 +08:00 [INF] Executing ObjectResult, writing value of type 'Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto'.
2023-12-13 16:17:29.723 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application) in 15.3008ms
2023-12-13 16:17:29.723 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 16:17:29.723 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:17:29",
  "ExecutionDuration": 16,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/account",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.AccountService",
      "MethodName": "Get",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:17:29",
      "ExecutionDuration": 5,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:17:30.645 +08:00 [INF] CORS policy execution failed.
2023-12-13 16:17:30.645 +08:00 [INF] Request origin http://127.0.0.1:18001 does not have permission to access the resource.
2023-12-13 16:17:30.656 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:17:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:17:30.656 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:17:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:17:30.656 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:17:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:17:30.656 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:17:30'.
2023-12-13 16:17:30.656 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:17:30'.
2023-12-13 16:17:30.656 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:17:30'.
2023-12-13 16:17:30.656 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:17:30.656 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:17:30.656 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:17:30.656 +08:00 [INF] Route matched with {action = "GetList", controller = "Plate", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.PlateService (Yi.Framework.Bbs.Application).
2023-12-13 16:17:30.656 +08:00 [INF] Route matched with {action = "GetWeek", controller = "AccessLog", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Yi.Framework.Bbs.Application.Contracts.Dtos.AccessLog.AccessLogDto[]] GetWeekAsync() on controller Yi.Framework.Bbs.Application.Services.AccessLogService (Yi.Framework.Bbs.Application).
2023-12-13 16:17:30.656 +08:00 [INF] Route matched with {action = "Access", controller = "AccessLog", area = ""}. Executing controller action with signature System.Threading.Tasks.Task AccessAsync() on controller Yi.Framework.Bbs.Application.Services.AccessLogService (Yi.Framework.Bbs.Application).
2023-12-13 16:17:30.659 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Number`,`LastModificationTime`,`CreationTime` FROM `AccessLog`    ORDER BY `CreationTime` DESC LIMIT 0,7
2023-12-13 16:17:30.659 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Number`,`LastModificationTime`,`CreationTime` FROM `AccessLog`    ORDER BY `CreationTime` DESC LIMIT 0,1
2023-12-13 16:17:30.660 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Plate`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 16:17:30.660 +08:00 [INF] Executing ObjectResult, writing value of type 'Yi.Framework.Bbs.Application.Contracts.Dtos.AccessLog.AccessLogDto[]'.
2023-12-13 16:17:30.660 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application) in 3.6747ms
2023-12-13 16:17:30.660 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:17:30.660 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Code`,`Name`,`Logo`,`Introduction`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Plate`   WHERE ( `IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 16:17:30.660 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:17:30",
  "ExecutionDuration": 4,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/access-log/week",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.AccessLogService",
      "MethodName": "GetWeekAsync",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:17:30",
      "ExecutionDuration": 3,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:17:30.662 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:17:30.662 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application) in 5.5288ms
2023-12-13 16:17:30.662 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:17:30.662 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:17:30",
  "ExecutionDuration": 6,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/plate",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.PlateService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"name\":null,\"code\":null,\"startTime\":null,\"endTime\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:17:30",
      "ExecutionDuration": 4,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:17:30.684 +08:00 [DBG] Yi-SQL执行:UPDATE `AccessLog`  SET
             `Number` =(  `Number` + 1  )   WHERE ( `Id` = N'947fd485-3518-1852-96fd-3a0f746d5a4e' )
2023-12-13 16:17:30.686 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application) in 29.371ms
2023-12-13 16:17:30.686 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:17:30.686 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:17:30",
  "ExecutionDuration": 30,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "POST",
  "HttpStatusCode": 204,
  "Url": "/api/app/access-log",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.AccessLogService",
      "MethodName": "AccessAsync",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:17:30",
      "ExecutionDuration": 29,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:17:30.702 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:17:30'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:17:30.702 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:17:30'.
2023-12-13 16:17:30.703 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:17:30.703 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:17:30.789 +08:00 [ERR] ---------- RemoteServiceErrorInfo ----------
{
  "code": null,
  "message": "对不起,在处理你的请求期间,产生了一个服务器内部错误!",
  "details": null,
  "data": {},
  "validationErrors": null
}

2023-12-13 16:17:30.789 +08:00 [ERR] 中文提示 : 表达式错误 value(Castle.Proxies.DiscussServiceProxy).CurrentUser.Id 表达式中出现了空引用 检查参数是否为null 
English Message : Expression error value(Castle.Proxies.DiscussServiceProxy).CurrentUser.Id expression, An empty reference appears in the expression to check if the parameter is null 
SqlSugar.SqlSugarException: 中文提示 : 表达式错误 value(Castle.Proxies.DiscussServiceProxy).CurrentUser.Id 表达式中出现了空引用 检查参数是否为null 
English Message : Expression error value(Castle.Proxies.DiscussServiceProxy).CurrentUser.Id expression, An empty reference appears in the expression to check if the parameter is null 
   at SqlSugar.Check.ExceptionEasy(String enMessage, String cnMessage)
   at SqlSugar.ExpressionTool.GetMemberValue(MemberInfo member, Expression expression)
   at SqlSugar.MemberExpressionResolve.ResolveMemberValue(ExpressionParameter parameter, ExpressionParameter baseParameter, Nullable`1 isLeft, Boolean isSetTempData, MemberExpression expression)
   at SqlSugar.MemberExpressionResolve.ResolveMemberValue(ExpressionParameter parameter, ExpressionParameter baseParameter, MemberExpression expression, Nullable`1 isLeft, Boolean isSetTempData)
   at SqlSugar.MemberExpressionResolve..ctor(ExpressionParameter parameter)
   at SqlSugar.BaseResolve.Start()
   at SqlSugar.BinaryExpressionResolve.Right(ExpressionParameter parameter, String operatorValue, Boolean isEqual, Expression rightExpression, Boolean lsbs)
   at SqlSugar.BinaryExpressionResolve.DefaultBinary(ExpressionParameter parameter, BinaryExpression expression, String operatorValue)
   at SqlSugar.BinaryExpressionResolve.Other(ExpressionParameter parameter)
   at SqlSugar.BinaryExpressionResolve..ctor(ExpressionParameter parameter)
   at SqlSugar.BaseResolve.Start()
   at SqlSugar.BinaryExpressionResolve.Left(BinaryExpression expression, Expression leftExpression)
   at SqlSugar.BinaryExpressionResolve.DefaultBinary(ExpressionParameter parameter, BinaryExpression expression, String operatorValue)
   at SqlSugar.BinaryExpressionResolve.Other(ExpressionParameter parameter)
   at SqlSugar.BinaryExpressionResolve..ctor(ExpressionParameter parameter)
   at SqlSugar.BaseResolve.Start()
   at SqlSugar.LambdaExpressionResolve..ctor(ExpressionParameter parameter)
   at SqlSugar.BaseResolve.Start()
   at SqlSugar.ExpressionContext.Resolve(Expression expression, ResolveExpressType resolveType)
   at SqlSugar.SubTools.GetMethodValue(ExpressionContext context, Expression item, ResolveExpressType type)
   at SqlSugar.SubWhere.GetValue(Expression expression)
   at SqlSugar.SubResolve.<>c__DisplayClass10_0.<GetSubItems>b__6(ISubOperation it)
   at System.Linq.Enumerable.SelectListIterator`2.Fill(ReadOnlySpan`1 source, Span`1 destination, Func`2 func)
   at System.Linq.Enumerable.SelectListIterator`2.ToList()
   at SqlSugar.SubResolve.GetSubItems()
   at SqlSugar.SubResolve.GetSql()
   at SqlSugar.MethodCallExpressionResolve..ctor(ExpressionParameter parameter)
   at SqlSugar.BaseResolve.Start()
   at SqlSugar.BaseResolve.ResloveBoolMethod(ExpressionParameter parameter, Expression item, String asName)
   at SqlSugar.BaseResolve.ResolveNewExpressions(ExpressionParameter parameter, Expression item, String asName)
   at SqlSugar.MemberInitExpressionResolve.Select(MemberInitExpression expression, ExpressionParameter parameter, Boolean isSingle)
   at SqlSugar.MemberInitExpressionResolve..ctor(ExpressionParameter parameter)
   at SqlSugar.BaseResolve.Start()
   at SqlSugar.LambdaExpressionResolve..ctor(ExpressionParameter parameter)
   at SqlSugar.BaseResolve.Start()
   at SqlSugar.ExpressionContext.Resolve(Expression expression, ResolveExpressType resolveType)
   at SqlSugar.QueryBuilder.GetExpressionValue(Expression expression, ResolveExpressType resolveType)
   at SqlSugar.QueryBuilder.GetSelectValueByExpression()
   at SqlSugar.SqliteQueryBuilder.get_GetSelectValue()
   at SqlSugar.QueryableProvider`2.Select[TResult](Expression`1 expression, Boolean isAutoFill)
   at Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync(DiscussGetListInputVo input) in E:\code\csharp\Yi\Yi.Abp.Net8\module\bbs\Yi.Framework.Bbs.Application\Services\DiscussService.cs:line 77
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.GlobalFeatures.GlobalFeatureInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Validation.ValidationInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Auditing.AuditingInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at Castle.DynamicProxy.AsyncInterceptorBase.ProceedAsynchronous[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo)
   at Volo.Abp.Castle.DynamicProxy.CastleAbpMethodInvocationAdapterWithReturnValue`1.ProceedAsync()
   at Volo.Abp.Uow.UnitOfWorkInterceptor.InterceptAsync(IAbpMethodInvocation invocation)
   at Volo.Abp.Castle.DynamicProxy.CastleAsyncAbpInterceptorAdapter`1.InterceptAsync[TResult](IInvocation invocation, IInvocationProceedInfo proceedInfo, Func`3 proceed)
   at lambda_method1376(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextExceptionFilterAsync>g__Awaited|26_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
2023-12-13 16:17:30.789 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Http.RemoteServiceErrorResponse'.
2023-12-13 16:17:30.789 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 86.3236ms
2023-12-13 16:17:30.789 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:17:30.790 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:17:30",
  "ExecutionDuration": 87,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 500,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":null,\"isTop\":true,\"type\":0,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:17:30",
      "ExecutionDuration": 85,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [
    {
      "InnerException": null,
      "StackTrace": null,
      "Source": null,
      "Sql": null,
      "Parametres": null,
      "Message": "中文提示 : 表达式错误 value(Castle.Proxies.DiscussServiceProxy).CurrentUser.Id 表达式中出现了空引用 检查参数是否为null \r\nEnglish Message : Expression error value(Castle.Proxies.DiscussServiceProxy).CurrentUser.Id expression, An empty reference appears in the expression to check if the parameter is null ",
      "Data": {},
      "HelpLink": null,
      "HResult": -2146233088
    }
  ],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:25:28.117 +08:00 [INF] Yi框架-Abp.vNext，启动！
2023-12-13 16:25:31.010 +08:00 [INF] Loaded ABP modules:
2023-12-13 16:25:31.011 +08:00 [INF] - Yi.Abp.Web.YiAbpWebModule
2023-12-13 16:25:31.011 +08:00 [INF]   - Yi.Abp.SqlsugarCore.YiAbpSqlSugarCoreModule
2023-12-13 16:25:31.011 +08:00 [INF]     - Yi.Abp.Domain.YiAbpDomainModule
2023-12-13 16:25:31.011 +08:00 [INF]       - Yi.Abp.Domain.Shared.YiAbpDomainSharedModule
2023-12-13 16:25:31.011 +08:00 [INF]         - Yi.Framework.Rbac.Domain.Shared.YiFrameworkRbacDomainSharedModule
2023-12-13 16:25:31.011 +08:00 [INF]           - Volo.Abp.Domain.AbpDddDomainSharedModule
2023-12-13 16:25:31.011 +08:00 [INF]             - Volo.Abp.MultiTenancy.AbpMultiTenancyAbstractionsModule
2023-12-13 16:25:31.011 +08:00 [INF]               - Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemModule
2023-12-13 16:25:31.011 +08:00 [INF]               - Volo.Abp.Localization.AbpLocalizationModule
2023-12-13 16:25:31.011 +08:00 [INF]                 - Volo.Abp.Settings.AbpSettingsModule
2023-12-13 16:25:31.011 +08:00 [INF]                   - Volo.Abp.Localization.AbpLocalizationAbstractionsModule
2023-12-13 16:25:31.011 +08:00 [INF]                   - Volo.Abp.Security.AbpSecurityModule
2023-12-13 16:25:31.011 +08:00 [INF]                   - Volo.Abp.Data.AbpDataModule
2023-12-13 16:25:31.011 +08:00 [INF]                     - Volo.Abp.ObjectExtending.AbpObjectExtendingModule
2023-12-13 16:25:31.011 +08:00 [INF]                       - Volo.Abp.Validation.AbpValidationAbstractionsModule
2023-12-13 16:25:31.011 +08:00 [INF]                     - Volo.Abp.Uow.AbpUnitOfWorkModule
2023-12-13 16:25:31.011 +08:00 [INF]                     - Volo.Abp.EventBus.Abstractions.AbpEventBusAbstractionsModule
2023-12-13 16:25:31.011 +08:00 [INF]                 - Volo.Abp.Threading.AbpThreadingModule
2023-12-13 16:25:31.011 +08:00 [INF]           - Yi.Framework.Mapster.YiFrameworkMapsterModule
2023-12-13 16:25:31.011 +08:00 [INF]             - Yi.Framework.Core.YiFrameworkCoreModule
2023-12-13 16:25:31.011 +08:00 [INF]             - Volo.Abp.ObjectMapping.AbpObjectMappingModule
2023-12-13 16:25:31.011 +08:00 [INF]         - Yi.Framework.Bbs.Domain.Shared.YiFrameworkBbsDomainSharedModule
2023-12-13 16:25:31.011 +08:00 [INF]       - Yi.Framework.Rbac.Domain.YiFrameworkRbacDomainModule
2023-12-13 16:25:31.011 +08:00 [INF]         - Volo.Abp.AspNetCore.SignalR.AbpAspNetCoreSignalRModule
2023-12-13 16:25:31.011 +08:00 [INF]           - Volo.Abp.AspNetCore.AbpAspNetCoreModule
2023-12-13 16:25:31.011 +08:00 [INF]             - Volo.Abp.Auditing.AbpAuditingModule
2023-12-13 16:25:31.011 +08:00 [INF]               - Volo.Abp.Json.AbpJsonModule
2023-12-13 16:25:31.011 +08:00 [INF]                 - Volo.Abp.Json.SystemTextJson.AbpJsonSystemTextJsonModule
2023-12-13 16:25:31.011 +08:00 [INF]                   - Volo.Abp.Json.AbpJsonAbstractionsModule
2023-12-13 16:25:31.011 +08:00 [INF]                   - Volo.Abp.Timing.AbpTimingModule
2023-12-13 16:25:31.011 +08:00 [INF]               - Volo.Abp.MultiTenancy.AbpMultiTenancyModule
2023-12-13 16:25:31.011 +08:00 [INF]               - Volo.Abp.Auditing.AbpAuditingContractsModule
2023-12-13 16:25:31.011 +08:00 [INF]             - Volo.Abp.Http.AbpHttpModule
2023-12-13 16:25:31.011 +08:00 [INF]               - Volo.Abp.Http.AbpHttpAbstractionsModule
2023-12-13 16:25:31.011 +08:00 [INF]               - Volo.Abp.Minify.AbpMinifyModule
2023-12-13 16:25:31.011 +08:00 [INF]             - Volo.Abp.Authorization.AbpAuthorizationModule
2023-12-13 16:25:31.011 +08:00 [INF]               - Volo.Abp.Authorization.AbpAuthorizationAbstractionsModule
2023-12-13 16:25:31.011 +08:00 [INF]             - Volo.Abp.Validation.AbpValidationModule
2023-12-13 16:25:31.011 +08:00 [INF]             - Volo.Abp.ExceptionHandling.AbpExceptionHandlingModule
2023-12-13 16:25:31.011 +08:00 [INF]         - Volo.Abp.Domain.AbpDddDomainModule
2023-12-13 16:25:31.011 +08:00 [INF]           - Volo.Abp.EventBus.AbpEventBusModule
2023-12-13 16:25:31.011 +08:00 [INF]             - Volo.Abp.Guids.AbpGuidsModule
2023-12-13 16:25:31.011 +08:00 [INF]             - Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule
2023-12-13 16:25:31.011 +08:00 [INF]             - Volo.Abp.DistributedLocking.AbpDistributedLockingAbstractionsModule
2023-12-13 16:25:31.011 +08:00 [INF]           - Volo.Abp.Specifications.AbpSpecificationsModule
2023-12-13 16:25:31.011 +08:00 [INF]           - Volo.Abp.Caching.AbpCachingModule
2023-12-13 16:25:31.011 +08:00 [INF]             - Volo.Abp.Serialization.AbpSerializationModule
2023-12-13 16:25:31.011 +08:00 [INF]       - Yi.Framework.Bbs.Domain.YiFrameworkBbsDomainModule
2023-12-13 16:25:31.011 +08:00 [INF]     - Yi.Framework.Rbac.SqlSugarCore.YiFrameworkRbacSqlSugarCoreModule
2023-12-13 16:25:31.011 +08:00 [INF]       - Yi.Framework.SqlSugarCore.YiFrameworkSqlSugarCoreModule
2023-12-13 16:25:31.011 +08:00 [INF]     - Yi.Framework.Bbs.SqlSugarCore.YiFrameworkBbsSqlSugarCoreModule
2023-12-13 16:25:31.011 +08:00 [INF]   - Yi.Abp.Application.YiAbpApplicationModule
2023-12-13 16:25:31.011 +08:00 [INF]     - Yi.Abp.Application.Contracts.YiAbpApplicationContractsModule
2023-12-13 16:25:31.011 +08:00 [INF]       - Yi.Framework.Rbac.Application.Contracts.YiFrameworkRbacApplicationContractsModule
2023-12-13 16:25:31.011 +08:00 [INF]         - Yi.Framework.Ddd.Application.Contracts.YiFrameworkDddApplicationContractsModule
2023-12-13 16:25:31.011 +08:00 [INF]           - Volo.Abp.Application.AbpDddApplicationContractsModule
2023-12-13 16:25:31.011 +08:00 [INF]       - Yi.Framework.Bbs.Application.Contracts.YiFrameworkBbsApplicationContractsModule
2023-12-13 16:25:31.011 +08:00 [INF]     - Yi.Framework.Rbac.Application.YiFrameworkRbacApplicationModule
2023-12-13 16:25:31.011 +08:00 [INF]       - Yi.Framework.Ddd.Application.YiFrameworkDddApplicationModule
2023-12-13 16:25:31.011 +08:00 [INF]         - Volo.Abp.Application.AbpDddApplicationModule
2023-12-13 16:25:31.011 +08:00 [INF]           - Volo.Abp.Features.AbpFeaturesModule
2023-12-13 16:25:31.011 +08:00 [INF]           - Volo.Abp.GlobalFeatures.AbpGlobalFeaturesModule
2023-12-13 16:25:31.011 +08:00 [INF]       - Volo.Abp.BackgroundWorkers.Quartz.AbpBackgroundWorkersQuartzModule
2023-12-13 16:25:31.011 +08:00 [INF]         - Volo.Abp.Quartz.AbpQuartzModule
2023-12-13 16:25:31.011 +08:00 [INF]     - Yi.Framework.Bbs.Application.YiFrameworkBbsApplicationModule
2023-12-13 16:25:31.011 +08:00 [INF]   - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcModule
2023-12-13 16:25:31.011 +08:00 [INF]     - Volo.Abp.ApiVersioning.AbpApiVersioningAbstractionsModule
2023-12-13 16:25:31.011 +08:00 [INF]     - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcContractsModule
2023-12-13 16:25:31.011 +08:00 [INF]     - Volo.Abp.UI.Navigation.AbpUiNavigationModule
2023-12-13 16:25:31.011 +08:00 [INF]       - Volo.Abp.UI.AbpUiModule
2023-12-13 16:25:31.011 +08:00 [INF]   - Volo.Abp.Autofac.AbpAutofacModule
2023-12-13 16:25:31.011 +08:00 [INF]     - Volo.Abp.Castle.AbpCastleCoreModule
2023-12-13 16:25:31.011 +08:00 [INF]   - Volo.Abp.Swashbuckle.AbpSwashbuckleModule
2023-12-13 16:25:31.011 +08:00 [INF]   - Volo.Abp.AspNetCore.Serilog.AbpAspNetCoreSerilogModule
2023-12-13 16:25:31.011 +08:00 [INF]   - Volo.Abp.AspNetCore.Authentication.JwtBearer.AbpAspNetCoreAuthenticationJwtBearerModule
2023-12-13 16:25:31.011 +08:00 [INF]   - Yi.Framework.AspNetCore.YiFrameworkAspNetCoreModule
2023-12-13 16:25:31.214 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.237 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.238 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.239 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.241 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.243 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.245 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.246 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.247 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.248 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.249 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.251 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.251 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.252 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.253 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.253 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.256 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.257 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.259 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.260 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.261 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.261 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.262 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.263 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:25:31.395 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Dept`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:25:31.409 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Dictionary`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:25:31.411 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `DictionaryType`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:25:31.414 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Menu`  WHERE ( `MenuName` = N'系统管理' )  AND ( `IsDeleted` = 0 ) 
2023-12-13 16:25:31.416 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Post`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:25:31.418 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Role`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:25:31.420 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `User`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:25:31.731 +08:00 [INF] User profile is available. Using 'C:\Users\chenchun\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-13 16:25:31.778 +08:00 [INF] Initialized all ABP modules.
2023-12-13 16:25:31.863 +08:00 [INF] Now listening on: http://[::]:19001
2023-12-13 16:25:31.864 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-13 16:25:31.864 +08:00 [INF] Hosting environment: Development
2023-12-13 16:25:31.864 +08:00 [INF] Content root path: E:\code\csharp\Yi\Yi.Abp.Net8\src\Yi.Abp.Web
2023-12-13 16:25:43.384 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 16:25:43.384 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 16:25:43.412 +08:00 [INF] Route matched with {action = "Get", controller = "Account", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto] Get() on controller Yi.Framework.Rbac.Application.Services.AccountService (Yi.Framework.Rbac.Application).
2023-12-13 16:25:43.423 +08:00 [INF] Route matched with {action = "GetList", controller = "Config", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListOutputDto]] GetListAsync(Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListInputVo) on controller Yi.Framework.Rbac.Application.Services.ConfigService (Yi.Framework.Rbac.Application).
2023-12-13 16:25:43.544 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`Name`,`Age`,`UserName`,`Password`,`Salt`,`Icon`,`Nick`,`Email`,`Ip`,`Address`,`Phone`,`Introduction`,`Remark`,`Sex`,`DeptId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State` FROM `User`  WHERE `Id` = N'36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    AND ( `IsDeleted` = 0 ) 
2023-12-13 16:25:43.555 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Config`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 16:25:43.557 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`ConfigName`,`ConfigKey`,`ConfigValue`,`ConfigType`,`OrderNum`,`Remark`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Config`   WHERE ( `IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 16:25:43.576 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListOutputDto, Yi.Framework.Rbac.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:25:43.589 +08:00 [DBG] Yi-SQL执行:SELECT `UserId` as aid,`RoleId` as bid FROM `UserRole`  WHERE   `UserId` = '36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    
2023-12-13 16:25:43.598 +08:00 [DBG] Yi-SQL执行:SELECT * FROM `Role`  WHERE  ( `IsDeleted` = 0 )   AND   `Id` = null     AND  ( `IsDeleted` = 0 )  
2023-12-13 16:25:43.629 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application) in 203.0409ms
2023-12-13 16:25:43.630 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 16:25:43.660 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:25:43",
  "ExecutionDuration": 255,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/config",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.ConfigService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"configName\":null,\"configKey\":null,\"startTime\":null,\"endTime\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:25:43",
      "ExecutionDuration": 62,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:25:43.696 +08:00 [INF] Executing ObjectResult, writing value of type 'Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto'.
2023-12-13 16:25:43.714 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application) in 301.8134ms
2023-12-13 16:25:43.715 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 16:25:43.716 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:25:43",
  "ExecutionDuration": 338,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/account",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.AccountService",
      "MethodName": "Get",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:25:43",
      "ExecutionDuration": 181,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:25:44.078 +08:00 [INF] CORS policy execution failed.
2023-12-13 16:25:44.079 +08:00 [INF] Request origin http://127.0.0.1:18001 does not have permission to access the resource.
2023-12-13 16:25:44.085 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:25:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:25:44.086 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:25:44'.
2023-12-13 16:25:44.097 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:25:44.107 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:25:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:25:44.107 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:25:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:25:44.107 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:25:44'.
2023-12-13 16:25:44.107 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:25:44'.
2023-12-13 16:25:44.108 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:25:44.108 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:25:44.108 +08:00 [INF] Route matched with {action = "Access", controller = "AccessLog", area = ""}. Executing controller action with signature System.Threading.Tasks.Task AccessAsync() on controller Yi.Framework.Bbs.Application.Services.AccessLogService (Yi.Framework.Bbs.Application).
2023-12-13 16:25:44.112 +08:00 [INF] Route matched with {action = "GetWeek", controller = "AccessLog", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Yi.Framework.Bbs.Application.Contracts.Dtos.AccessLog.AccessLogDto[]] GetWeekAsync() on controller Yi.Framework.Bbs.Application.Services.AccessLogService (Yi.Framework.Bbs.Application).
2023-12-13 16:25:44.115 +08:00 [INF] Route matched with {action = "GetList", controller = "Plate", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.PlateService (Yi.Framework.Bbs.Application).
2023-12-13 16:25:44.119 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Number`,`LastModificationTime`,`CreationTime` FROM `AccessLog`    ORDER BY `CreationTime` DESC LIMIT 0,7
2023-12-13 16:25:44.121 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Number`,`LastModificationTime`,`CreationTime` FROM `AccessLog`    ORDER BY `CreationTime` DESC LIMIT 0,1
2023-12-13 16:25:44.134 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Plate`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 16:25:44.135 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Code`,`Name`,`Logo`,`Introduction`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Plate`   WHERE ( `IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 16:25:44.137 +08:00 [INF] Executing ObjectResult, writing value of type 'Yi.Framework.Bbs.Application.Contracts.Dtos.AccessLog.AccessLogDto[]'.
2023-12-13 16:25:44.140 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application) in 27.3276ms
2023-12-13 16:25:44.140 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:25:44.140 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:25:44",
  "ExecutionDuration": 31,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/access-log/week",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.AccessLogService",
      "MethodName": "GetWeekAsync",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:25:44",
      "ExecutionDuration": 24,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:25:44.155 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:25:44.161 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application) in 45.9938ms
2023-12-13 16:25:44.161 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:25:44.162 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:25:44",
  "ExecutionDuration": 53,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/plate",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.PlateService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"name\":null,\"code\":null,\"startTime\":null,\"endTime\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:25:44",
      "ExecutionDuration": 29,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:25:44.176 +08:00 [DBG] Yi-SQL执行:UPDATE `AccessLog`  SET
             `Number` =(  `Number` + 1  )   WHERE ( `Id` = N'947fd485-3518-1852-96fd-3a0f746d5a4e' )
2023-12-13 16:25:44.180 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application) in 71.4888ms
2023-12-13 16:25:44.180 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:25:44.180 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:25:44",
  "ExecutionDuration": 84,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "POST",
  "HttpStatusCode": 204,
  "Url": "/api/app/access-log",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.AccessLogService",
      "MethodName": "AccessAsync",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:25:44",
      "ExecutionDuration": 69,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:25:44.193 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:25:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:25:44.193 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:25:44'.
2023-12-13 16:25:44.194 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:25:44.204 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:25:44.305 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:25:44.307 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:25:44.309 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:25:44.314 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 110.1594ms
2023-12-13 16:25:44.314 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:25:44.315 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:25:44",
  "ExecutionDuration": 120,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":null,\"isTop\":true,\"type\":0,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:25:44",
      "ExecutionDuration": 79,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:25:44.322 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:25:44'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:25:44.322 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:25:44'.
2023-12-13 16:25:44.323 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.BannerService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:25:44.328 +08:00 [INF] Route matched with {action = "GetList", controller = "Banner", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Banner.BannerGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Banner.BannerGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.BannerService (Yi.Framework.Bbs.Application).
2023-12-13 16:26:09.913 +08:00 [INF] Yi框架-Abp.vNext，启动！
2023-12-13 16:26:12.469 +08:00 [INF] Loaded ABP modules:
2023-12-13 16:26:12.469 +08:00 [INF] - Yi.Abp.Web.YiAbpWebModule
2023-12-13 16:26:12.469 +08:00 [INF]   - Yi.Abp.SqlsugarCore.YiAbpSqlSugarCoreModule
2023-12-13 16:26:12.469 +08:00 [INF]     - Yi.Abp.Domain.YiAbpDomainModule
2023-12-13 16:26:12.469 +08:00 [INF]       - Yi.Abp.Domain.Shared.YiAbpDomainSharedModule
2023-12-13 16:26:12.469 +08:00 [INF]         - Yi.Framework.Rbac.Domain.Shared.YiFrameworkRbacDomainSharedModule
2023-12-13 16:26:12.469 +08:00 [INF]           - Volo.Abp.Domain.AbpDddDomainSharedModule
2023-12-13 16:26:12.469 +08:00 [INF]             - Volo.Abp.MultiTenancy.AbpMultiTenancyAbstractionsModule
2023-12-13 16:26:12.469 +08:00 [INF]               - Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemModule
2023-12-13 16:26:12.469 +08:00 [INF]               - Volo.Abp.Localization.AbpLocalizationModule
2023-12-13 16:26:12.469 +08:00 [INF]                 - Volo.Abp.Settings.AbpSettingsModule
2023-12-13 16:26:12.469 +08:00 [INF]                   - Volo.Abp.Localization.AbpLocalizationAbstractionsModule
2023-12-13 16:26:12.469 +08:00 [INF]                   - Volo.Abp.Security.AbpSecurityModule
2023-12-13 16:26:12.469 +08:00 [INF]                   - Volo.Abp.Data.AbpDataModule
2023-12-13 16:26:12.469 +08:00 [INF]                     - Volo.Abp.ObjectExtending.AbpObjectExtendingModule
2023-12-13 16:26:12.469 +08:00 [INF]                       - Volo.Abp.Validation.AbpValidationAbstractionsModule
2023-12-13 16:26:12.469 +08:00 [INF]                     - Volo.Abp.Uow.AbpUnitOfWorkModule
2023-12-13 16:26:12.469 +08:00 [INF]                     - Volo.Abp.EventBus.Abstractions.AbpEventBusAbstractionsModule
2023-12-13 16:26:12.469 +08:00 [INF]                 - Volo.Abp.Threading.AbpThreadingModule
2023-12-13 16:26:12.469 +08:00 [INF]           - Yi.Framework.Mapster.YiFrameworkMapsterModule
2023-12-13 16:26:12.469 +08:00 [INF]             - Yi.Framework.Core.YiFrameworkCoreModule
2023-12-13 16:26:12.469 +08:00 [INF]             - Volo.Abp.ObjectMapping.AbpObjectMappingModule
2023-12-13 16:26:12.469 +08:00 [INF]         - Yi.Framework.Bbs.Domain.Shared.YiFrameworkBbsDomainSharedModule
2023-12-13 16:26:12.469 +08:00 [INF]       - Yi.Framework.Rbac.Domain.YiFrameworkRbacDomainModule
2023-12-13 16:26:12.469 +08:00 [INF]         - Volo.Abp.AspNetCore.SignalR.AbpAspNetCoreSignalRModule
2023-12-13 16:26:12.469 +08:00 [INF]           - Volo.Abp.AspNetCore.AbpAspNetCoreModule
2023-12-13 16:26:12.469 +08:00 [INF]             - Volo.Abp.Auditing.AbpAuditingModule
2023-12-13 16:26:12.469 +08:00 [INF]               - Volo.Abp.Json.AbpJsonModule
2023-12-13 16:26:12.469 +08:00 [INF]                 - Volo.Abp.Json.SystemTextJson.AbpJsonSystemTextJsonModule
2023-12-13 16:26:12.469 +08:00 [INF]                   - Volo.Abp.Json.AbpJsonAbstractionsModule
2023-12-13 16:26:12.469 +08:00 [INF]                   - Volo.Abp.Timing.AbpTimingModule
2023-12-13 16:26:12.470 +08:00 [INF]               - Volo.Abp.MultiTenancy.AbpMultiTenancyModule
2023-12-13 16:26:12.470 +08:00 [INF]               - Volo.Abp.Auditing.AbpAuditingContractsModule
2023-12-13 16:26:12.470 +08:00 [INF]             - Volo.Abp.Http.AbpHttpModule
2023-12-13 16:26:12.470 +08:00 [INF]               - Volo.Abp.Http.AbpHttpAbstractionsModule
2023-12-13 16:26:12.470 +08:00 [INF]               - Volo.Abp.Minify.AbpMinifyModule
2023-12-13 16:26:12.470 +08:00 [INF]             - Volo.Abp.Authorization.AbpAuthorizationModule
2023-12-13 16:26:12.470 +08:00 [INF]               - Volo.Abp.Authorization.AbpAuthorizationAbstractionsModule
2023-12-13 16:26:12.470 +08:00 [INF]             - Volo.Abp.Validation.AbpValidationModule
2023-12-13 16:26:12.470 +08:00 [INF]             - Volo.Abp.ExceptionHandling.AbpExceptionHandlingModule
2023-12-13 16:26:12.470 +08:00 [INF]         - Volo.Abp.Domain.AbpDddDomainModule
2023-12-13 16:26:12.470 +08:00 [INF]           - Volo.Abp.EventBus.AbpEventBusModule
2023-12-13 16:26:12.470 +08:00 [INF]             - Volo.Abp.Guids.AbpGuidsModule
2023-12-13 16:26:12.470 +08:00 [INF]             - Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule
2023-12-13 16:26:12.470 +08:00 [INF]             - Volo.Abp.DistributedLocking.AbpDistributedLockingAbstractionsModule
2023-12-13 16:26:12.470 +08:00 [INF]           - Volo.Abp.Specifications.AbpSpecificationsModule
2023-12-13 16:26:12.470 +08:00 [INF]           - Volo.Abp.Caching.AbpCachingModule
2023-12-13 16:26:12.470 +08:00 [INF]             - Volo.Abp.Serialization.AbpSerializationModule
2023-12-13 16:26:12.470 +08:00 [INF]       - Yi.Framework.Bbs.Domain.YiFrameworkBbsDomainModule
2023-12-13 16:26:12.470 +08:00 [INF]     - Yi.Framework.Rbac.SqlSugarCore.YiFrameworkRbacSqlSugarCoreModule
2023-12-13 16:26:12.470 +08:00 [INF]       - Yi.Framework.SqlSugarCore.YiFrameworkSqlSugarCoreModule
2023-12-13 16:26:12.470 +08:00 [INF]     - Yi.Framework.Bbs.SqlSugarCore.YiFrameworkBbsSqlSugarCoreModule
2023-12-13 16:26:12.470 +08:00 [INF]   - Yi.Abp.Application.YiAbpApplicationModule
2023-12-13 16:26:12.470 +08:00 [INF]     - Yi.Abp.Application.Contracts.YiAbpApplicationContractsModule
2023-12-13 16:26:12.470 +08:00 [INF]       - Yi.Framework.Rbac.Application.Contracts.YiFrameworkRbacApplicationContractsModule
2023-12-13 16:26:12.470 +08:00 [INF]         - Yi.Framework.Ddd.Application.Contracts.YiFrameworkDddApplicationContractsModule
2023-12-13 16:26:12.470 +08:00 [INF]           - Volo.Abp.Application.AbpDddApplicationContractsModule
2023-12-13 16:26:12.470 +08:00 [INF]       - Yi.Framework.Bbs.Application.Contracts.YiFrameworkBbsApplicationContractsModule
2023-12-13 16:26:12.470 +08:00 [INF]     - Yi.Framework.Rbac.Application.YiFrameworkRbacApplicationModule
2023-12-13 16:26:12.470 +08:00 [INF]       - Yi.Framework.Ddd.Application.YiFrameworkDddApplicationModule
2023-12-13 16:26:12.470 +08:00 [INF]         - Volo.Abp.Application.AbpDddApplicationModule
2023-12-13 16:26:12.470 +08:00 [INF]           - Volo.Abp.Features.AbpFeaturesModule
2023-12-13 16:26:12.470 +08:00 [INF]           - Volo.Abp.GlobalFeatures.AbpGlobalFeaturesModule
2023-12-13 16:26:12.470 +08:00 [INF]       - Volo.Abp.BackgroundWorkers.Quartz.AbpBackgroundWorkersQuartzModule
2023-12-13 16:26:12.470 +08:00 [INF]         - Volo.Abp.Quartz.AbpQuartzModule
2023-12-13 16:26:12.470 +08:00 [INF]     - Yi.Framework.Bbs.Application.YiFrameworkBbsApplicationModule
2023-12-13 16:26:12.470 +08:00 [INF]   - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcModule
2023-12-13 16:26:12.470 +08:00 [INF]     - Volo.Abp.ApiVersioning.AbpApiVersioningAbstractionsModule
2023-12-13 16:26:12.470 +08:00 [INF]     - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcContractsModule
2023-12-13 16:26:12.470 +08:00 [INF]     - Volo.Abp.UI.Navigation.AbpUiNavigationModule
2023-12-13 16:26:12.470 +08:00 [INF]       - Volo.Abp.UI.AbpUiModule
2023-12-13 16:26:12.470 +08:00 [INF]   - Volo.Abp.Autofac.AbpAutofacModule
2023-12-13 16:26:12.470 +08:00 [INF]     - Volo.Abp.Castle.AbpCastleCoreModule
2023-12-13 16:26:12.470 +08:00 [INF]   - Volo.Abp.Swashbuckle.AbpSwashbuckleModule
2023-12-13 16:26:12.470 +08:00 [INF]   - Volo.Abp.AspNetCore.Serilog.AbpAspNetCoreSerilogModule
2023-12-13 16:26:12.470 +08:00 [INF]   - Volo.Abp.AspNetCore.Authentication.JwtBearer.AbpAspNetCoreAuthenticationJwtBearerModule
2023-12-13 16:26:12.470 +08:00 [INF]   - Yi.Framework.AspNetCore.YiFrameworkAspNetCoreModule
2023-12-13 16:26:12.630 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.650 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.653 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.656 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.658 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.661 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.663 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.664 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.664 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.666 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.667 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.669 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.669 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.670 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.671 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.671 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.675 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.676 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.677 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.679 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.680 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.681 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.682 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.682 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:26:12.811 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Dept`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:26:12.822 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Dictionary`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:26:12.823 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `DictionaryType`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:26:12.826 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Menu`  WHERE ( `MenuName` = N'系统管理' )  AND ( `IsDeleted` = 0 ) 
2023-12-13 16:26:12.828 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Post`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:26:12.830 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Role`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:26:12.832 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `User`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:26:13.073 +08:00 [INF] User profile is available. Using 'C:\Users\chenchun\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-13 16:26:13.133 +08:00 [INF] Initialized all ABP modules.
2023-12-13 16:26:13.203 +08:00 [INF] Now listening on: http://[::]:19001
2023-12-13 16:26:13.203 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-13 16:26:13.203 +08:00 [INF] Hosting environment: Development
2023-12-13 16:26:13.203 +08:00 [INF] Content root path: E:\code\csharp\Yi\Yi.Abp.Net8\src\Yi.Abp.Web
2023-12-13 16:26:18.471 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 16:26:18.471 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 16:26:18.491 +08:00 [INF] Route matched with {action = "Get", controller = "Account", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto] Get() on controller Yi.Framework.Rbac.Application.Services.AccountService (Yi.Framework.Rbac.Application).
2023-12-13 16:26:18.498 +08:00 [INF] Route matched with {action = "GetList", controller = "Config", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListOutputDto]] GetListAsync(Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListInputVo) on controller Yi.Framework.Rbac.Application.Services.ConfigService (Yi.Framework.Rbac.Application).
2023-12-13 16:26:18.580 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`Name`,`Age`,`UserName`,`Password`,`Salt`,`Icon`,`Nick`,`Email`,`Ip`,`Address`,`Phone`,`Introduction`,`Remark`,`Sex`,`DeptId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State` FROM `User`  WHERE `Id` = N'36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    AND ( `IsDeleted` = 0 ) 
2023-12-13 16:26:18.594 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Config`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 16:26:18.596 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`ConfigName`,`ConfigKey`,`ConfigValue`,`ConfigType`,`OrderNum`,`Remark`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Config`   WHERE ( `IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 16:26:18.608 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListOutputDto, Yi.Framework.Rbac.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:26:18.613 +08:00 [DBG] Yi-SQL执行:SELECT `UserId` as aid,`RoleId` as bid FROM `UserRole`  WHERE   `UserId` = '36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    
2023-12-13 16:26:18.619 +08:00 [DBG] Yi-SQL执行:SELECT * FROM `Role`  WHERE  ( `IsDeleted` = 0 )   AND   `Id` = null     AND  ( `IsDeleted` = 0 )  
2023-12-13 16:26:18.639 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application) in 139.5567ms
2023-12-13 16:26:18.640 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 16:26:18.655 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:26:18",
  "ExecutionDuration": 175,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/config",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.ConfigService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"configName\":null,\"configKey\":null,\"startTime\":null,\"endTime\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:26:18",
      "ExecutionDuration": 31,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:26:18.675 +08:00 [INF] Executing ObjectResult, writing value of type 'Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto'.
2023-12-13 16:26:18.686 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application) in 194.0487ms
2023-12-13 16:26:18.686 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 16:26:18.687 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:26:18",
  "ExecutionDuration": 220,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/account",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.AccountService",
      "MethodName": "Get",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:26:18",
      "ExecutionDuration": 118,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:26:19.111 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:26:19'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:26:19.111 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:26:19'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:26:19.112 +08:00 [INF] CORS policy execution failed.
2023-12-13 16:26:19.112 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:26:19'.
2023-12-13 16:26:19.112 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:26:19'.
2023-12-13 16:26:19.112 +08:00 [INF] Request origin http://127.0.0.1:18001 does not have permission to access the resource.
2023-12-13 16:26:19.390 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:26:19'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:26:19.390 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:26:19'.
2023-12-13 16:26:19.390 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:26:19.390 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:26:19.391 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:26:19.396 +08:00 [INF] Route matched with {action = "GetWeek", controller = "AccessLog", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Yi.Framework.Bbs.Application.Contracts.Dtos.AccessLog.AccessLogDto[]] GetWeekAsync() on controller Yi.Framework.Bbs.Application.Services.AccessLogService (Yi.Framework.Bbs.Application).
2023-12-13 16:26:19.396 +08:00 [INF] Route matched with {action = "Access", controller = "AccessLog", area = ""}. Executing controller action with signature System.Threading.Tasks.Task AccessAsync() on controller Yi.Framework.Bbs.Application.Services.AccessLogService (Yi.Framework.Bbs.Application).
2023-12-13 16:26:19.396 +08:00 [INF] Route matched with {action = "GetList", controller = "Plate", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.PlateService (Yi.Framework.Bbs.Application).
2023-12-13 16:26:19.401 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Number`,`LastModificationTime`,`CreationTime` FROM `AccessLog`    ORDER BY `CreationTime` DESC LIMIT 0,7
2023-12-13 16:26:19.402 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Number`,`LastModificationTime`,`CreationTime` FROM `AccessLog`    ORDER BY `CreationTime` DESC LIMIT 0,1
2023-12-13 16:26:19.405 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Plate`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 16:26:19.406 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Code`,`Name`,`Logo`,`Introduction`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Plate`   WHERE ( `IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 16:26:19.410 +08:00 [INF] Executing ObjectResult, writing value of type 'Yi.Framework.Bbs.Application.Contracts.Dtos.AccessLog.AccessLogDto[]'.
2023-12-13 16:26:19.412 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application) in 15.8244ms
2023-12-13 16:26:19.412 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:26:19.412 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:26:19",
  "ExecutionDuration": 22,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/access-log/week",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.AccessLogService",
      "MethodName": "GetWeekAsync",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:26:19",
      "ExecutionDuration": 13,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:26:19.419 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:26:19.422 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application) in 25.1018ms
2023-12-13 16:26:19.422 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:26:19.422 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:26:19",
  "ExecutionDuration": 32,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/plate",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.PlateService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"name\":null,\"code\":null,\"startTime\":null,\"endTime\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:26:19",
      "ExecutionDuration": 18,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:26:19.432 +08:00 [DBG] Yi-SQL执行:UPDATE `AccessLog`  SET
             `Number` =(  `Number` + 1  )   WHERE ( `Id` = N'947fd485-3518-1852-96fd-3a0f746d5a4e' )
2023-12-13 16:26:19.433 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application) in 37.492ms
2023-12-13 16:26:19.433 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:26:19.433 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:26:19",
  "ExecutionDuration": 42,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "POST",
  "HttpStatusCode": 204,
  "Url": "/api/app/access-log",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.AccessLogService",
      "MethodName": "AccessAsync",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:26:19",
      "ExecutionDuration": 36,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:26:19.451 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:26:19'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:26:19.451 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:26:19'.
2023-12-13 16:26:19.452 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:26:19.456 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:26:19.508 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:26:19.510 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:26:19.512 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:26:19.514 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 57.7068ms
2023-12-13 16:26:19.514 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:26:19.514 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:26:19",
  "ExecutionDuration": 62,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":null,\"isTop\":true,\"type\":0,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:26:19",
      "ExecutionDuration": 42,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:26:19.521 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:26:19'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:26:19.521 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:26:19'.
2023-12-13 16:26:19.522 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.BannerService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:26:19.524 +08:00 [INF] Route matched with {action = "GetList", controller = "Banner", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Banner.BannerGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Banner.BannerGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.BannerService (Yi.Framework.Bbs.Application).
2023-12-13 16:27:37.320 +08:00 [INF] Yi框架-Abp.vNext，启动！
2023-12-13 16:27:40.037 +08:00 [INF] Loaded ABP modules:
2023-12-13 16:27:40.037 +08:00 [INF] - Yi.Abp.Web.YiAbpWebModule
2023-12-13 16:27:40.037 +08:00 [INF]   - Yi.Abp.SqlsugarCore.YiAbpSqlSugarCoreModule
2023-12-13 16:27:40.037 +08:00 [INF]     - Yi.Abp.Domain.YiAbpDomainModule
2023-12-13 16:27:40.037 +08:00 [INF]       - Yi.Abp.Domain.Shared.YiAbpDomainSharedModule
2023-12-13 16:27:40.037 +08:00 [INF]         - Yi.Framework.Rbac.Domain.Shared.YiFrameworkRbacDomainSharedModule
2023-12-13 16:27:40.037 +08:00 [INF]           - Volo.Abp.Domain.AbpDddDomainSharedModule
2023-12-13 16:27:40.037 +08:00 [INF]             - Volo.Abp.MultiTenancy.AbpMultiTenancyAbstractionsModule
2023-12-13 16:27:40.037 +08:00 [INF]               - Volo.Abp.VirtualFileSystem.AbpVirtualFileSystemModule
2023-12-13 16:27:40.037 +08:00 [INF]               - Volo.Abp.Localization.AbpLocalizationModule
2023-12-13 16:27:40.037 +08:00 [INF]                 - Volo.Abp.Settings.AbpSettingsModule
2023-12-13 16:27:40.037 +08:00 [INF]                   - Volo.Abp.Localization.AbpLocalizationAbstractionsModule
2023-12-13 16:27:40.037 +08:00 [INF]                   - Volo.Abp.Security.AbpSecurityModule
2023-12-13 16:27:40.037 +08:00 [INF]                   - Volo.Abp.Data.AbpDataModule
2023-12-13 16:27:40.037 +08:00 [INF]                     - Volo.Abp.ObjectExtending.AbpObjectExtendingModule
2023-12-13 16:27:40.037 +08:00 [INF]                       - Volo.Abp.Validation.AbpValidationAbstractionsModule
2023-12-13 16:27:40.037 +08:00 [INF]                     - Volo.Abp.Uow.AbpUnitOfWorkModule
2023-12-13 16:27:40.037 +08:00 [INF]                     - Volo.Abp.EventBus.Abstractions.AbpEventBusAbstractionsModule
2023-12-13 16:27:40.037 +08:00 [INF]                 - Volo.Abp.Threading.AbpThreadingModule
2023-12-13 16:27:40.037 +08:00 [INF]           - Yi.Framework.Mapster.YiFrameworkMapsterModule
2023-12-13 16:27:40.037 +08:00 [INF]             - Yi.Framework.Core.YiFrameworkCoreModule
2023-12-13 16:27:40.037 +08:00 [INF]             - Volo.Abp.ObjectMapping.AbpObjectMappingModule
2023-12-13 16:27:40.037 +08:00 [INF]         - Yi.Framework.Bbs.Domain.Shared.YiFrameworkBbsDomainSharedModule
2023-12-13 16:27:40.037 +08:00 [INF]       - Yi.Framework.Rbac.Domain.YiFrameworkRbacDomainModule
2023-12-13 16:27:40.037 +08:00 [INF]         - Volo.Abp.AspNetCore.SignalR.AbpAspNetCoreSignalRModule
2023-12-13 16:27:40.037 +08:00 [INF]           - Volo.Abp.AspNetCore.AbpAspNetCoreModule
2023-12-13 16:27:40.037 +08:00 [INF]             - Volo.Abp.Auditing.AbpAuditingModule
2023-12-13 16:27:40.037 +08:00 [INF]               - Volo.Abp.Json.AbpJsonModule
2023-12-13 16:27:40.037 +08:00 [INF]                 - Volo.Abp.Json.SystemTextJson.AbpJsonSystemTextJsonModule
2023-12-13 16:27:40.037 +08:00 [INF]                   - Volo.Abp.Json.AbpJsonAbstractionsModule
2023-12-13 16:27:40.037 +08:00 [INF]                   - Volo.Abp.Timing.AbpTimingModule
2023-12-13 16:27:40.037 +08:00 [INF]               - Volo.Abp.MultiTenancy.AbpMultiTenancyModule
2023-12-13 16:27:40.037 +08:00 [INF]               - Volo.Abp.Auditing.AbpAuditingContractsModule
2023-12-13 16:27:40.037 +08:00 [INF]             - Volo.Abp.Http.AbpHttpModule
2023-12-13 16:27:40.037 +08:00 [INF]               - Volo.Abp.Http.AbpHttpAbstractionsModule
2023-12-13 16:27:40.037 +08:00 [INF]               - Volo.Abp.Minify.AbpMinifyModule
2023-12-13 16:27:40.037 +08:00 [INF]             - Volo.Abp.Authorization.AbpAuthorizationModule
2023-12-13 16:27:40.037 +08:00 [INF]               - Volo.Abp.Authorization.AbpAuthorizationAbstractionsModule
2023-12-13 16:27:40.037 +08:00 [INF]             - Volo.Abp.Validation.AbpValidationModule
2023-12-13 16:27:40.037 +08:00 [INF]             - Volo.Abp.ExceptionHandling.AbpExceptionHandlingModule
2023-12-13 16:27:40.037 +08:00 [INF]         - Volo.Abp.Domain.AbpDddDomainModule
2023-12-13 16:27:40.037 +08:00 [INF]           - Volo.Abp.EventBus.AbpEventBusModule
2023-12-13 16:27:40.037 +08:00 [INF]             - Volo.Abp.Guids.AbpGuidsModule
2023-12-13 16:27:40.037 +08:00 [INF]             - Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule
2023-12-13 16:27:40.037 +08:00 [INF]             - Volo.Abp.DistributedLocking.AbpDistributedLockingAbstractionsModule
2023-12-13 16:27:40.037 +08:00 [INF]           - Volo.Abp.Specifications.AbpSpecificationsModule
2023-12-13 16:27:40.037 +08:00 [INF]           - Volo.Abp.Caching.AbpCachingModule
2023-12-13 16:27:40.037 +08:00 [INF]             - Volo.Abp.Serialization.AbpSerializationModule
2023-12-13 16:27:40.037 +08:00 [INF]       - Yi.Framework.Bbs.Domain.YiFrameworkBbsDomainModule
2023-12-13 16:27:40.037 +08:00 [INF]     - Yi.Framework.Rbac.SqlSugarCore.YiFrameworkRbacSqlSugarCoreModule
2023-12-13 16:27:40.037 +08:00 [INF]       - Yi.Framework.SqlSugarCore.YiFrameworkSqlSugarCoreModule
2023-12-13 16:27:40.037 +08:00 [INF]     - Yi.Framework.Bbs.SqlSugarCore.YiFrameworkBbsSqlSugarCoreModule
2023-12-13 16:27:40.037 +08:00 [INF]   - Yi.Abp.Application.YiAbpApplicationModule
2023-12-13 16:27:40.037 +08:00 [INF]     - Yi.Abp.Application.Contracts.YiAbpApplicationContractsModule
2023-12-13 16:27:40.037 +08:00 [INF]       - Yi.Framework.Rbac.Application.Contracts.YiFrameworkRbacApplicationContractsModule
2023-12-13 16:27:40.037 +08:00 [INF]         - Yi.Framework.Ddd.Application.Contracts.YiFrameworkDddApplicationContractsModule
2023-12-13 16:27:40.037 +08:00 [INF]           - Volo.Abp.Application.AbpDddApplicationContractsModule
2023-12-13 16:27:40.037 +08:00 [INF]       - Yi.Framework.Bbs.Application.Contracts.YiFrameworkBbsApplicationContractsModule
2023-12-13 16:27:40.037 +08:00 [INF]     - Yi.Framework.Rbac.Application.YiFrameworkRbacApplicationModule
2023-12-13 16:27:40.037 +08:00 [INF]       - Yi.Framework.Ddd.Application.YiFrameworkDddApplicationModule
2023-12-13 16:27:40.037 +08:00 [INF]         - Volo.Abp.Application.AbpDddApplicationModule
2023-12-13 16:27:40.037 +08:00 [INF]           - Volo.Abp.Features.AbpFeaturesModule
2023-12-13 16:27:40.037 +08:00 [INF]           - Volo.Abp.GlobalFeatures.AbpGlobalFeaturesModule
2023-12-13 16:27:40.037 +08:00 [INF]       - Volo.Abp.BackgroundWorkers.Quartz.AbpBackgroundWorkersQuartzModule
2023-12-13 16:27:40.037 +08:00 [INF]         - Volo.Abp.Quartz.AbpQuartzModule
2023-12-13 16:27:40.037 +08:00 [INF]     - Yi.Framework.Bbs.Application.YiFrameworkBbsApplicationModule
2023-12-13 16:27:40.037 +08:00 [INF]   - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcModule
2023-12-13 16:27:40.037 +08:00 [INF]     - Volo.Abp.ApiVersioning.AbpApiVersioningAbstractionsModule
2023-12-13 16:27:40.037 +08:00 [INF]     - Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcContractsModule
2023-12-13 16:27:40.037 +08:00 [INF]     - Volo.Abp.UI.Navigation.AbpUiNavigationModule
2023-12-13 16:27:40.038 +08:00 [INF]       - Volo.Abp.UI.AbpUiModule
2023-12-13 16:27:40.038 +08:00 [INF]   - Volo.Abp.Autofac.AbpAutofacModule
2023-12-13 16:27:40.038 +08:00 [INF]     - Volo.Abp.Castle.AbpCastleCoreModule
2023-12-13 16:27:40.038 +08:00 [INF]   - Volo.Abp.Swashbuckle.AbpSwashbuckleModule
2023-12-13 16:27:40.038 +08:00 [INF]   - Volo.Abp.AspNetCore.Serilog.AbpAspNetCoreSerilogModule
2023-12-13 16:27:40.038 +08:00 [INF]   - Volo.Abp.AspNetCore.Authentication.JwtBearer.AbpAspNetCoreAuthenticationJwtBearerModule
2023-12-13 16:27:40.038 +08:00 [INF]   - Yi.Framework.AspNetCore.YiFrameworkAspNetCoreModule
2023-12-13 16:27:40.211 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.231 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.233 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.234 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.236 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.240 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.243 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.245 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.245 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.247 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.248 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.251 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.252 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.252 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.254 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.254 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.258 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.260 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.262 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.264 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.265 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.266 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.267 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.268 +08:00 [DBG] Yi-SQL执行:select Name from sqlite_master where type='table' and name<>'sqlite_sequence' order by name;
2023-12-13 16:27:40.396 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Dept`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:27:40.408 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Dictionary`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:27:40.410 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `DictionaryType`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:27:40.412 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Menu`  WHERE ( `MenuName` = N'系统管理' )  AND ( `IsDeleted` = 0 ) 
2023-12-13 16:27:40.415 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Post`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:27:40.416 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Role`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:27:40.418 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `User`  WHERE ( 1 = 1 )   AND ( `IsDeleted` = 0 ) 
2023-12-13 16:27:40.679 +08:00 [INF] User profile is available. Using 'C:\Users\chenchun\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-12-13 16:27:40.731 +08:00 [INF] Initialized all ABP modules.
2023-12-13 16:27:40.808 +08:00 [INF] Now listening on: http://[::]:19001
2023-12-13 16:27:40.808 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2023-12-13 16:27:40.808 +08:00 [INF] Hosting environment: Development
2023-12-13 16:27:40.808 +08:00 [INF] Content root path: E:\code\csharp\Yi\Yi.Abp.Net8\src\Yi.Abp.Web
2023-12-13 16:27:45.898 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 16:27:45.898 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 16:27:45.913 +08:00 [INF] Route matched with {action = "Get", controller = "Account", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto] Get() on controller Yi.Framework.Rbac.Application.Services.AccountService (Yi.Framework.Rbac.Application).
2023-12-13 16:27:45.918 +08:00 [INF] Route matched with {action = "GetList", controller = "Config", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListOutputDto]] GetListAsync(Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListInputVo) on controller Yi.Framework.Rbac.Application.Services.ConfigService (Yi.Framework.Rbac.Application).
2023-12-13 16:27:46.019 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`Name`,`Age`,`UserName`,`Password`,`Salt`,`Icon`,`Nick`,`Email`,`Ip`,`Address`,`Phone`,`Introduction`,`Remark`,`Sex`,`DeptId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State` FROM `User`  WHERE `Id` = N'36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    AND ( `IsDeleted` = 0 ) 
2023-12-13 16:27:46.024 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Config`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 16:27:46.026 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`ConfigName`,`ConfigKey`,`ConfigValue`,`ConfigType`,`OrderNum`,`Remark`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Config`   WHERE ( `IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 16:27:46.037 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListOutputDto, Yi.Framework.Rbac.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:27:46.047 +08:00 [DBG] Yi-SQL执行:SELECT `UserId` as aid,`RoleId` as bid FROM `UserRole`  WHERE   `UserId` = '36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    
2023-12-13 16:27:46.052 +08:00 [DBG] Yi-SQL执行:SELECT * FROM `Role`  WHERE  ( `IsDeleted` = 0 )   AND   `Id` = null     AND  ( `IsDeleted` = 0 )  
2023-12-13 16:27:46.149 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application) in 229.7072ms
2023-12-13 16:27:46.149 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 16:27:46.163 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:27:45",
  "ExecutionDuration": 256,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/config",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.ConfigService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"configName\":null,\"configKey\":null,\"startTime\":null,\"endTime\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:27:45",
      "ExecutionDuration": 37,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:27:46.187 +08:00 [INF] Executing ObjectResult, writing value of type 'Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto'.
2023-12-13 16:27:46.198 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application) in 285.4074ms
2023-12-13 16:27:46.198 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 16:27:46.199 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:27:45",
  "ExecutionDuration": 304,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/account",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.AccountService",
      "MethodName": "Get",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:27:45",
      "ExecutionDuration": 191,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:27:46.608 +08:00 [INF] CORS policy execution failed.
2023-12-13 16:27:46.608 +08:00 [INF] Request origin http://127.0.0.1:18001 does not have permission to access the resource.
2023-12-13 16:27:46.611 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:27:46.611 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:27:46.611 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:27:46.612 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:46'.
2023-12-13 16:27:46.612 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:46'.
2023-12-13 16:27:46.612 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:46'.
2023-12-13 16:27:47.990 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:47.990 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:47.990 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:48.000 +08:00 [INF] Route matched with {action = "Access", controller = "AccessLog", area = ""}. Executing controller action with signature System.Threading.Tasks.Task AccessAsync() on controller Yi.Framework.Bbs.Application.Services.AccessLogService (Yi.Framework.Bbs.Application).
2023-12-13 16:27:48.000 +08:00 [INF] Route matched with {action = "GetWeek", controller = "AccessLog", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Yi.Framework.Bbs.Application.Contracts.Dtos.AccessLog.AccessLogDto[]] GetWeekAsync() on controller Yi.Framework.Bbs.Application.Services.AccessLogService (Yi.Framework.Bbs.Application).
2023-12-13 16:27:48.001 +08:00 [INF] Route matched with {action = "GetList", controller = "Plate", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.PlateService (Yi.Framework.Bbs.Application).
2023-12-13 16:27:48.007 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Number`,`LastModificationTime`,`CreationTime` FROM `AccessLog`    ORDER BY `CreationTime` DESC LIMIT 0,7
2023-12-13 16:27:48.009 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Number`,`LastModificationTime`,`CreationTime` FROM `AccessLog`    ORDER BY `CreationTime` DESC LIMIT 0,1
2023-12-13 16:27:48.018 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Plate`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 16:27:48.019 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Code`,`Name`,`Logo`,`Introduction`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Plate`   WHERE ( `IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 16:27:48.021 +08:00 [INF] Executing ObjectResult, writing value of type 'Yi.Framework.Bbs.Application.Contracts.Dtos.AccessLog.AccessLogDto[]'.
2023-12-13 16:27:48.024 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application) in 23.9098ms
2023-12-13 16:27:48.024 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:48.024 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:27:47",
  "ExecutionDuration": 34,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/access-log/week",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.AccessLogService",
      "MethodName": "GetWeekAsync",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:27:48",
      "ExecutionDuration": 20,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:27:48.035 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:27:48.039 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application) in 37.5493ms
2023-12-13 16:27:48.039 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:48.039 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:27:47",
  "ExecutionDuration": 49,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/plate",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.PlateService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"name\":null,\"code\":null,\"startTime\":null,\"endTime\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:27:48",
      "ExecutionDuration": 24,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:27:48.055 +08:00 [DBG] Yi-SQL执行:UPDATE `AccessLog`  SET
             `Number` =(  `Number` + 1  )   WHERE ( `Id` = N'947fd485-3518-1852-96fd-3a0f746d5a4e' )
2023-12-13 16:27:48.058 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application) in 57.9099ms
2023-12-13 16:27:48.058 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:48.058 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:27:47",
  "ExecutionDuration": 71,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "POST",
  "HttpStatusCode": 204,
  "Url": "/api/app/access-log",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.AccessLogService",
      "MethodName": "AccessAsync",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:27:48",
      "ExecutionDuration": 56,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:27:48.080 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:27:48.080 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:48'.
2023-12-13 16:27:48.081 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:48.090 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:27:48.188 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:27:48.190 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:27:48.192 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:27:48.196 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 105.4394ms
2023-12-13 16:27:48.196 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:48.196 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:27:48",
  "ExecutionDuration": 115,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":null,\"isTop\":true,\"type\":0,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:27:48",
      "ExecutionDuration": 74,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:27:48.205 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:48'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:27:48.205 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:48'.
2023-12-13 16:27:48.206 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.BannerService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:48.211 +08:00 [INF] Route matched with {action = "GetList", controller = "Banner", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Banner.BannerGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Banner.BannerGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.BannerService (Yi.Framework.Bbs.Application).
2023-12-13 16:27:48.222 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Banner`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 16:27:48.223 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Name`,`Logo`,`Color`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Banner`   WHERE ( `IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 16:27:48.227 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Banner.BannerGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:27:48.230 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.BannerService.GetListAsync (Yi.Framework.Bbs.Application) in 18.716ms
2023-12-13 16:27:48.230 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.BannerService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:48.230 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:27:48",
  "ExecutionDuration": 24,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/banner",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.BannerService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"name\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:27:48",
      "ExecutionDuration": 9,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:27:51.255 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 16:27:51.255 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 16:27:51.255 +08:00 [INF] Route matched with {action = "GetList", controller = "Config", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListOutputDto]] GetListAsync(Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListInputVo) on controller Yi.Framework.Rbac.Application.Services.ConfigService (Yi.Framework.Rbac.Application).
2023-12-13 16:27:51.255 +08:00 [INF] Route matched with {action = "Get", controller = "Account", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto] Get() on controller Yi.Framework.Rbac.Application.Services.AccountService (Yi.Framework.Rbac.Application).
2023-12-13 16:27:51.258 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`Name`,`Age`,`UserName`,`Password`,`Salt`,`Icon`,`Nick`,`Email`,`Ip`,`Address`,`Phone`,`Introduction`,`Remark`,`Sex`,`DeptId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State` FROM `User`  WHERE `Id` = N'36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    AND ( `IsDeleted` = 0 ) 
2023-12-13 16:27:51.258 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Config`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 16:27:51.261 +08:00 [DBG] Yi-SQL执行:SELECT `UserId` as aid,`RoleId` as bid FROM `UserRole`  WHERE   `UserId` = '36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    
2023-12-13 16:27:51.262 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`ConfigName`,`ConfigKey`,`ConfigValue`,`ConfigType`,`OrderNum`,`Remark`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Config`   WHERE ( `IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 16:27:51.263 +08:00 [DBG] Yi-SQL执行:SELECT * FROM `Role`  WHERE  ( `IsDeleted` = 0 )   AND   `Id` = null     AND  ( `IsDeleted` = 0 )  
2023-12-13 16:27:51.264 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListOutputDto, Yi.Framework.Rbac.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:27:51.264 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application) in 8.8565ms
2023-12-13 16:27:51.264 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 16:27:51.265 +08:00 [INF] Executing ObjectResult, writing value of type 'Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto'.
2023-12-13 16:27:51.265 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:27:51",
  "ExecutionDuration": 10,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/config",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.ConfigService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"configName\":null,\"configKey\":null,\"startTime\":null,\"endTime\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:27:51",
      "ExecutionDuration": 7,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:27:51.265 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application) in 9.5273ms
2023-12-13 16:27:51.265 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 16:27:51.265 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:27:51",
  "ExecutionDuration": 10,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/account",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.AccountService",
      "MethodName": "Get",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:27:51",
      "ExecutionDuration": 8,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:27:51.970 +08:00 [INF] CORS policy execution failed.
2023-12-13 16:27:51.970 +08:00 [INF] Request origin http://127.0.0.1:18001 does not have permission to access the resource.
2023-12-13 16:27:51.971 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:51'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:27:51.971 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:51'.
2023-12-13 16:27:51.972 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:51.973 +08:00 [INF] Route matched with {action = "Access", controller = "AccessLog", area = ""}. Executing controller action with signature System.Threading.Tasks.Task AccessAsync() on controller Yi.Framework.Bbs.Application.Services.AccessLogService (Yi.Framework.Bbs.Application).
2023-12-13 16:27:51.975 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Number`,`LastModificationTime`,`CreationTime` FROM `AccessLog`    ORDER BY `CreationTime` DESC LIMIT 0,1
2023-12-13 16:27:51.978 +08:00 [DBG] Yi-SQL执行:UPDATE `AccessLog`  SET
             `Number` =(  `Number` + 1  )   WHERE ( `Id` = N'947fd485-3518-1852-96fd-3a0f746d5a4e' )
2023-12-13 16:27:51.980 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application) in 7.6966ms
2023-12-13 16:27:51.980 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:51.981 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:27:51",
  "ExecutionDuration": 8,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "POST",
  "HttpStatusCode": 204,
  "Url": "/api/app/access-log",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.AccessLogService",
      "MethodName": "AccessAsync",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:27:51",
      "ExecutionDuration": 7,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:27:52.005 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:52'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:27:52.005 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:52'.
2023-12-13 16:27:52.006 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:52.006 +08:00 [INF] Route matched with {action = "GetWeek", controller = "AccessLog", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Yi.Framework.Bbs.Application.Contracts.Dtos.AccessLog.AccessLogDto[]] GetWeekAsync() on controller Yi.Framework.Bbs.Application.Services.AccessLogService (Yi.Framework.Bbs.Application).
2023-12-13 16:27:52.007 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Number`,`LastModificationTime`,`CreationTime` FROM `AccessLog`    ORDER BY `CreationTime` DESC LIMIT 0,7
2023-12-13 16:27:52.008 +08:00 [INF] Executing ObjectResult, writing value of type 'Yi.Framework.Bbs.Application.Contracts.Dtos.AccessLog.AccessLogDto[]'.
2023-12-13 16:27:52.009 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application) in 2.3824ms
2023-12-13 16:27:52.009 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:52.009 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:27:52",
  "ExecutionDuration": 3,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/access-log/week",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.AccessLogService",
      "MethodName": "GetWeekAsync",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:27:52",
      "ExecutionDuration": 1,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:27:52.042 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:52'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:27:52.042 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:52'.
2023-12-13 16:27:52.043 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:52.043 +08:00 [INF] Route matched with {action = "GetList", controller = "Plate", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.PlateService (Yi.Framework.Bbs.Application).
2023-12-13 16:27:52.047 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Plate`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 16:27:52.049 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Code`,`Name`,`Logo`,`Introduction`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Plate`   WHERE ( `IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 16:27:52.051 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:27:52.052 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application) in 8.5163ms
2023-12-13 16:27:52.052 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:52.052 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:27:52",
  "ExecutionDuration": 9,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/plate",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.PlateService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"name\":null,\"code\":null,\"startTime\":null,\"endTime\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:27:52",
      "ExecutionDuration": 6,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:27:52.139 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:52'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:27:52.139 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:52'.
2023-12-13 16:27:52.140 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:52.140 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:27:52.150 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:27:52.151 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:27:52.152 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:27:52.153 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 12.4201ms
2023-12-13 16:27:52.153 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:52.153 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:27:52",
  "ExecutionDuration": 13,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":null,\"isTop\":true,\"type\":0,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:27:52",
      "ExecutionDuration": 10,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:27:52.171 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:52'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:27:52.171 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:52'.
2023-12-13 16:27:52.172 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.BannerService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:52.172 +08:00 [INF] Route matched with {action = "GetList", controller = "Banner", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Banner.BannerGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Banner.BannerGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.BannerService (Yi.Framework.Bbs.Application).
2023-12-13 16:27:52.178 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Banner`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 16:27:52.179 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Name`,`Logo`,`Color`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Banner`   WHERE ( `IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 16:27:52.180 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Banner.BannerGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:27:52.181 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.BannerService.GetListAsync (Yi.Framework.Bbs.Application) in 8.545ms
2023-12-13 16:27:52.181 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.BannerService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:52.181 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:27:52",
  "ExecutionDuration": 9,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/banner",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.BannerService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"name\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:27:52",
      "ExecutionDuration": 7,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:27:53.848 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:53'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:27:53.848 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:53'.
2023-12-13 16:27:53.848 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:53.849 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:27:53.855 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:27:53.856 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:27:53.857 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:27:53.857 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 8.1409ms
2023-12-13 16:27:53.857 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:53.857 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:27:53",
  "ExecutionDuration": 9,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":\"68444634-209e-44ae-f707-3a0f6b4feed3\",\"isTop\":false,\"type\":0,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:27:53",
      "ExecutionDuration": 5,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:27:53.869 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:53'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:27:53.870 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:27:53'.
2023-12-13 16:27:53.870 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:53.870 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:27:53.874 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:27:53.874 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:27:53.875 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:27:53.875 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 4.8822ms
2023-12-13 16:27:53.875 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:27:53.875 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:27:53",
  "ExecutionDuration": 5,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":null,\"isTop\":true,\"type\":0,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:27:53",
      "ExecutionDuration": 4,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:04.470 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:04.470 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:04'.
2023-12-13 16:28:04.471 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:04.471 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:04.476 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:28:04.477 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`AgreeNum` DESC LIMIT 0,10
2023-12-13 16:28:04.478 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:04.478 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 6.9368ms
2023-12-13 16:28:04.478 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:04.478 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:04",
  "ExecutionDuration": 7,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":\"68444634-209e-44ae-f707-3a0f6b4feed3\",\"isTop\":false,\"type\":1,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:04",
      "ExecutionDuration": 6,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:04.489 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:04.489 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:04'.
2023-12-13 16:28:04.490 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:04.490 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:04.494 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:28:04.495 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:28:04.496 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:04.496 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 6.0845ms
2023-12-13 16:28:04.496 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:04.496 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:04",
  "ExecutionDuration": 7,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":null,\"isTop\":true,\"type\":0,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:04",
      "ExecutionDuration": 5,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:04.707 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:04.707 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:04'.
2023-12-13 16:28:04.708 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:04.708 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:04.714 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:28:04.714 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`SeeNum` DESC LIMIT 0,10
2023-12-13 16:28:04.715 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:04.716 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 7.7483ms
2023-12-13 16:28:04.716 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:04.716 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:04",
  "ExecutionDuration": 8,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":\"68444634-209e-44ae-f707-3a0f6b4feed3\",\"isTop\":false,\"type\":2,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:04",
      "ExecutionDuration": 6,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:04.730 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:04'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:04.730 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:04'.
2023-12-13 16:28:04.730 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:04.730 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:04.734 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:28:04.735 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:28:04.736 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:04.736 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 5.5035ms
2023-12-13 16:28:04.736 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:04.736 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:04",
  "ExecutionDuration": 6,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":null,\"isTop\":true,\"type\":0,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:04",
      "ExecutionDuration": 5,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:05.014 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:05.014 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:05'.
2023-12-13 16:28:05.015 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:05.015 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:05.018 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:28:05.019 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`AgreeNum` DESC LIMIT 0,10
2023-12-13 16:28:05.020 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:05.020 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 5.2133ms
2023-12-13 16:28:05.020 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:05.020 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:05",
  "ExecutionDuration": 6,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":\"68444634-209e-44ae-f707-3a0f6b4feed3\",\"isTop\":false,\"type\":1,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:05",
      "ExecutionDuration": 4,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:05.030 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:05.030 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:05'.
2023-12-13 16:28:05.031 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:05.031 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:05.034 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:28:05.035 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:28:05.036 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:05.036 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 4.9766ms
2023-12-13 16:28:05.036 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:05.036 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:05",
  "ExecutionDuration": 5,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":null,\"isTop\":true,\"type\":0,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:05",
      "ExecutionDuration": 4,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:05.301 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:05.301 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:05'.
2023-12-13 16:28:05.301 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:05.301 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:05.305 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:28:05.306 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:28:05.307 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:05.307 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 5.4561ms
2023-12-13 16:28:05.307 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:05.307 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:05",
  "ExecutionDuration": 6,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":\"68444634-209e-44ae-f707-3a0f6b4feed3\",\"isTop\":false,\"type\":0,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:05",
      "ExecutionDuration": 5,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:05.320 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:05.320 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:05'.
2023-12-13 16:28:05.321 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:05.321 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:05.325 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:28:05.325 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:28:05.326 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:05.327 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 5.5544ms
2023-12-13 16:28:05.327 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:05.327 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:05",
  "ExecutionDuration": 6,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":null,\"isTop\":true,\"type\":0,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:05",
      "ExecutionDuration": 4,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:05.734 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:05.734 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:05'.
2023-12-13 16:28:05.734 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:05.734 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:05.738 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:28:05.739 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`AgreeNum` DESC LIMIT 0,10
2023-12-13 16:28:05.740 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:05.740 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 5.5087ms
2023-12-13 16:28:05.740 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:05.740 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:05",
  "ExecutionDuration": 6,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":\"68444634-209e-44ae-f707-3a0f6b4feed3\",\"isTop\":false,\"type\":1,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:05",
      "ExecutionDuration": 5,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:05.751 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:05'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:05.751 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:05'.
2023-12-13 16:28:05.751 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:05.751 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:05.755 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:28:05.756 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:28:05.756 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:05.757 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 5.1321ms
2023-12-13 16:28:05.757 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:05.757 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:05",
  "ExecutionDuration": 6,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":null,\"isTop\":true,\"type\":0,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:05",
      "ExecutionDuration": 4,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:10.337 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:10.337 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:10'.
2023-12-13 16:28:10.337 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:10.338 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:10.342 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:28:10.343 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:28:10.343 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:10.344 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 6.1061ms
2023-12-13 16:28:10.344 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:10.344 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:10",
  "ExecutionDuration": 7,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":\"68444634-209e-44ae-f707-3a0f6b4feed3\",\"isTop\":false,\"type\":0,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:10",
      "ExecutionDuration": 5,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:10.355 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:10'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:10.355 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:10'.
2023-12-13 16:28:10.356 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:10.356 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:10.359 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:28:10.360 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:28:10.361 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:10.362 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 5.6657ms
2023-12-13 16:28:10.362 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:10.362 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:10",
  "ExecutionDuration": 6,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":null,\"isTop\":true,\"type\":0,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:10",
      "ExecutionDuration": 5,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:21.273 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 16:28:21.273 +08:00 [INF] Route matched with {action = "GetList", controller = "Config", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListOutputDto]] GetListAsync(Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListInputVo) on controller Yi.Framework.Rbac.Application.Services.ConfigService (Yi.Framework.Rbac.Application).
2023-12-13 16:28:21.275 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Config`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 16:28:21.276 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`ConfigName`,`ConfigKey`,`ConfigValue`,`ConfigType`,`OrderNum`,`Remark`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Config`   WHERE ( `IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 16:28:21.277 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Rbac.Application.Contracts.Dtos.Config.ConfigGetListOutputDto, Yi.Framework.Rbac.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:21.277 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application) in 3.5683ms
2023-12-13 16:28:21.277 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.ConfigService.GetListAsync (Yi.Framework.Rbac.Application)'
2023-12-13 16:28:21.277 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:21",
  "ExecutionDuration": 4,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/config",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.ConfigService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"configName\":null,\"configKey\":null,\"startTime\":null,\"endTime\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:21",
      "ExecutionDuration": 3,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:21.593 +08:00 [INF] Executing endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 16:28:21.594 +08:00 [INF] Route matched with {action = "Get", controller = "Account", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto] Get() on controller Yi.Framework.Rbac.Application.Services.AccountService (Yi.Framework.Rbac.Application).
2023-12-13 16:28:21.596 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`IsDeleted`,`Name`,`Age`,`UserName`,`Password`,`Salt`,`Icon`,`Nick`,`Email`,`Ip`,`Address`,`Phone`,`Introduction`,`Remark`,`Sex`,`DeptId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`OrderNum`,`State` FROM `User`  WHERE `Id` = N'36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    AND ( `IsDeleted` = 0 ) 
2023-12-13 16:28:21.597 +08:00 [DBG] Yi-SQL执行:SELECT `UserId` as aid,`RoleId` as bid FROM `UserRole`  WHERE   `UserId` = '36532e8b-109b-c6dd-fa9e-3a0f5fe48619'    
2023-12-13 16:28:21.600 +08:00 [DBG] Yi-SQL执行:SELECT * FROM `Role`  WHERE  ( `IsDeleted` = 0 )   AND   `Id` = null     AND  ( `IsDeleted` = 0 )  
2023-12-13 16:28:21.601 +08:00 [INF] Executing ObjectResult, writing value of type 'Yi.Framework.Rbac.Domain.Shared.Dtos.UserRoleMenuDto'.
2023-12-13 16:28:21.601 +08:00 [INF] Executed action Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application) in 7.3101ms
2023-12-13 16:28:21.601 +08:00 [INF] Executed endpoint 'Yi.Framework.Rbac.Application.Services.AccountService.Get (Yi.Framework.Rbac.Application)'
2023-12-13 16:28:21.601 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": "36532e8b-109b-c6dd-fa9e-3a0f5fe48619",
  "UserName": "cc",
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:21",
  "ExecutionDuration": 8,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/account",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Rbac.Application.Services.AccountService",
      "MethodName": "Get",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:28:21",
      "ExecutionDuration": 6,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:22.038 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:22.038 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:22'.
2023-12-13 16:28:22.038 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:22.038 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:22.043 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:28:22.044 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:28:22.045 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:22.045 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 6.3758ms
2023-12-13 16:28:22.045 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:22.045 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:22",
  "ExecutionDuration": 7,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":\"68444634-209e-44ae-f707-3a0f6b4feed3\",\"isTop\":false,\"type\":0,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:22",
      "ExecutionDuration": 5,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:22.077 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:22'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:22.077 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:22'.
2023-12-13 16:28:22.078 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:22.079 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:22.083 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:28:22.084 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:28:22.085 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:22.085 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 6.3847ms
2023-12-13 16:28:22.085 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:22.085 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:22",
  "ExecutionDuration": 7,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":null,\"isTop\":true,\"type\":0,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:22",
      "ExecutionDuration": 5,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:25.390 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:25'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:25.390 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:25'.
2023-12-13 16:28:25.391 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:25.391 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:25.396 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:28:25.397 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:28:25.398 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:25.398 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 6.9846ms
2023-12-13 16:28:25.398 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:25.398 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:25",
  "ExecutionDuration": 7,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":\"68444634-209e-44ae-f707-3a0f6b4feed3\",\"isTop\":false,\"type\":0,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:25",
      "ExecutionDuration": 6,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:25.412 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:25'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:25.412 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:25'.
2023-12-13 16:28:25.413 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:25.413 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:25.417 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:28:25.418 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:28:25.419 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:25.419 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 6.5079ms
2023-12-13 16:28:25.419 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:25.420 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:25",
  "ExecutionDuration": 7,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":null,\"isTop\":true,\"type\":0,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:25",
      "ExecutionDuration": 5,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:28.440 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:28.440 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:28'.
2023-12-13 16:28:28.441 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:28.441 +08:00 [INF] Route matched with {action = "GetWeek", controller = "AccessLog", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Yi.Framework.Bbs.Application.Contracts.Dtos.AccessLog.AccessLogDto[]] GetWeekAsync() on controller Yi.Framework.Bbs.Application.Services.AccessLogService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:28.442 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Number`,`LastModificationTime`,`CreationTime` FROM `AccessLog`    ORDER BY `CreationTime` DESC LIMIT 0,7
2023-12-13 16:28:28.443 +08:00 [INF] Executing ObjectResult, writing value of type 'Yi.Framework.Bbs.Application.Contracts.Dtos.AccessLog.AccessLogDto[]'.
2023-12-13 16:28:28.443 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application) in 1.9939ms
2023-12-13 16:28:28.443 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.GetWeekAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:28.444 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:28",
  "ExecutionDuration": 2,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/access-log/week",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.AccessLogService",
      "MethodName": "GetWeekAsync",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:28:28",
      "ExecutionDuration": 1,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:28.509 +08:00 [INF] CORS policy execution failed.
2023-12-13 16:28:28.509 +08:00 [INF] Request origin http://127.0.0.1:18001 does not have permission to access the resource.
2023-12-13 16:28:28.510 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:28.510 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:28.510 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:28'.
2023-12-13 16:28:28.510 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:28'.
2023-12-13 16:28:28.511 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:28.511 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:28.511 +08:00 [INF] Route matched with {action = "Access", controller = "AccessLog", area = ""}. Executing controller action with signature System.Threading.Tasks.Task AccessAsync() on controller Yi.Framework.Bbs.Application.Services.AccessLogService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:28.511 +08:00 [INF] Route matched with {action = "GetList", controller = "Plate", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.PlateService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:28.513 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Plate`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 16:28:28.514 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Code`,`Name`,`Logo`,`Introduction`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Plate`   WHERE ( `IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 16:28:28.514 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Number`,`LastModificationTime`,`CreationTime` FROM `AccessLog`    ORDER BY `CreationTime` DESC LIMIT 0,1
2023-12-13 16:28:28.515 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Plate.PlateGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:28.515 +08:00 [DBG] Yi-SQL执行:UPDATE `AccessLog`  SET
             `Number` =(  `Number` + 1  )   WHERE ( `Id` = N'947fd485-3518-1852-96fd-3a0f746d5a4e' )
2023-12-13 16:28:28.515 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application) in 4.0265ms
2023-12-13 16:28:28.515 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.PlateService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:28.516 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:28",
  "ExecutionDuration": 4,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/plate",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.PlateService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"name\":null,\"code\":null,\"startTime\":null,\"endTime\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:28",
      "ExecutionDuration": 3,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:28.517 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application) in 5.5175ms
2023-12-13 16:28:28.517 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.AccessLogService.AccessAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:28.517 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:28",
  "ExecutionDuration": 6,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "POST",
  "HttpStatusCode": 204,
  "Url": "/api/app/access-log",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.AccessLogService",
      "MethodName": "AccessAsync",
      "Parameters": "{}",
      "ExecutionTime": "2023-12-13 16:28:28",
      "ExecutionDuration": 5,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:28.586 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:28.586 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:28'.
2023-12-13 16:28:28.587 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:28.587 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:28.592 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:28:28.593 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `IsTop` = 1 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:28:28.594 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:28.594 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 7.1233ms
2023-12-13 16:28:28.594 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:28.595 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:28",
  "ExecutionDuration": 8,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":null,\"isTop\":true,\"type\":0,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:28",
      "ExecutionDuration": 6,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:28.605 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:28'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:28.605 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:28'.
2023-12-13 16:28:28.605 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.BannerService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:28.605 +08:00 [INF] Route matched with {action = "GetList", controller = "Banner", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Banner.BannerGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Banner.BannerGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.BannerService (Yi.Framework.Bbs.Application).
2023-12-13 16:28:28.607 +08:00 [DBG] Yi-SQL执行:SELECT COUNT(1) FROM `Banner`  WHERE ( `IsDeleted` = 0 ) 
2023-12-13 16:28:28.607 +08:00 [DBG] Yi-SQL执行:SELECT `Id`,`Name`,`Logo`,`Color`,`IsDeleted`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime` FROM `Banner`   WHERE ( `IsDeleted` = 0 )   LIMIT 0,10
2023-12-13 16:28:28.608 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Banner.BannerGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:28:28.608 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.BannerService.GetListAsync (Yi.Framework.Bbs.Application) in 2.6389ms
2023-12-13 16:28:28.608 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.BannerService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:28.608 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:28",
  "ExecutionDuration": 3,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/banner",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.BannerService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"name\":null,\"sorting\":null,\"skipCount\":0,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:28",
      "ExecutionDuration": 2,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:28:54.277 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:54'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:28:54.277 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:28:54'.
2023-12-13 16:28:54.278 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:28:54.278 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
2023-12-13 16:29:01.754 +08:00 [DBG] Yi-SQL执行: SELECT COUNT(1) FROM (SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )   WHERE ( `discuss`.`IsDeleted` = 0 ) ) CountTable 
2023-12-13 16:29:01.755 +08:00 [DBG] Yi-SQL执行:SELECT `discuss`.`Id` AS `Id` , ( CASE  WHEN (EXISTS ( SELECT * FROM `Agree` WHERE 1=1  )) THEN 1  ELSE 0 END ) AS `IsAgree` , `user`.`Id` AS `User.Id` , `user`.`UserName` AS `User.UserName` , `user`.`Nick` AS `User.Nick` , `user`.`Icon` AS `User.Icon` ,`discuss`.`Title` AS `Title` ,`discuss`.`Types` AS `Types` ,`discuss`.`Introduction` AS `Introduction` ,`discuss`.`AgreeNum` AS `AgreeNum` ,`discuss`.`SeeNum` AS `SeeNum` ,`discuss`.`Cover` AS `Cover` ,`discuss`.`Color` AS `Color` ,`discuss`.`IsTop` AS `IsTop` ,`discuss`.`PermissionType` AS `PermissionType` ,`discuss`.`PlateId` AS `PlateId` ,`discuss`.`CreationTime` AS `CreationTime` ,`discuss`.`PermissionUserIds` AS `PermissionUserIds` FROM  (SELECT * FROM  (SELECT `Id`,`Title`,`Types`,`Introduction`,`AgreeNum`,`SeeNum`,`Cover`,`Content`,`Color`,`IsDeleted`,`IsTop`,`PermissionType`,`PlateId`,`CreationTime`,`CreatorId`,`LastModifierId`,`LastModificationTime`,`PermissionUserIds` FROM `Discuss`  WHERE ( `PlateId` = N'68444634-209e-44ae-f707-3a0f6b4feed3' )  AND ( `IsTop` = 0 )  AND ( `IsDeleted` = 0 ) ) MergeTable ) `discuss` Left JOIN `User` `user` ON ( `discuss`.`CreatorId` = `user`.`Id` ) AND ( `user`.`IsDeleted` = 0 )    WHERE ( `discuss`.`IsDeleted` = 0 )  ORDER BY `discuss`.`CreationTime` DESC LIMIT 0,10
2023-12-13 16:29:01.755 +08:00 [INF] Executing ObjectResult, writing value of type 'Volo.Abp.Application.Dtos.PagedResultDto`1[[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto, Yi.Framework.Bbs.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-12-13 16:29:01.755 +08:00 [INF] Executed action Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application) in 7477.4053ms
2023-12-13 16:29:01.755 +08:00 [INF] Executed endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:29:01.756 +08:00 [DBG] Yi-请求追踪:{
  "ApplicationName": "Yi.Abp.Web",
  "UserId": null,
  "UserName": null,
  "TenantId": null,
  "TenantName": null,
  "ImpersonatorUserId": null,
  "ImpersonatorTenantId": null,
  "ImpersonatorUserName": null,
  "ImpersonatorTenantName": null,
  "ExecutionTime": "2023-12-13 16:28:54",
  "ExecutionDuration": 7478,
  "ClientId": null,
  "CorrelationId": null,
  "ClientIpAddress": "::ffff:127.0.0.1",
  "ClientName": null,
  "BrowserInfo": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36 Edg/120.0.0.0",
  "HttpMethod": "GET",
  "HttpStatusCode": 200,
  "Url": "/api/app/discuss",
  "Actions": [
    {
      "ServiceName": "Yi.Framework.Bbs.Application.Services.DiscussService",
      "MethodName": "GetListAsync",
      "Parameters": "{\"input\":{\"title\":null,\"plateId\":\"68444634-209e-44ae-f707-3a0f6b4feed3\",\"isTop\":false,\"type\":0,\"sorting\":null,\"skipCount\":1,\"maxResultCount\":10}}",
      "ExecutionTime": "2023-12-13 16:28:54",
      "ExecutionDuration": 7476,
      "ExtraProperties": {}
    }
  ],
  "Exceptions": [],
  "ExtraProperties": {},
  "EntityChanges": [],
  "Comments": []
}
2023-12-13 16:29:01.769 +08:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:29:01'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2023-12-13 16:29:01.769 +08:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '2023/12/13 6:24:29', Current time (UTC): '2023/12/13 8:29:01'.
2023-12-13 16:29:01.769 +08:00 [INF] Executing endpoint 'Yi.Framework.Bbs.Application.Services.DiscussService.GetListAsync (Yi.Framework.Bbs.Application)'
2023-12-13 16:29:01.769 +08:00 [INF] Route matched with {action = "GetList", controller = "Discuss", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Volo.Abp.Application.Dtos.PagedResultDto`1[Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListOutputDto]] GetListAsync(Yi.Framework.Bbs.Application.Contracts.Dtos.Discuss.DiscussGetListInputVo) on controller Yi.Framework.Bbs.Application.Services.DiscussService (Yi.Framework.Bbs.Application).
