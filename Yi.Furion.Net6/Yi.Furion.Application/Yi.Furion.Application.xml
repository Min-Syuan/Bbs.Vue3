<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Yi.Furion.Application</name>
    </assembly>
    <members>
        <member name="T:Yi.Furion.Application.App.Services.Impl.TrendsService">
            <summary>
            Trends服务实现
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.App.Services.Impl.TrendsService.GetListAsync(Yi.Furion.Core.App.Dtos.Trends.TrendsGetListInput)">
            <summary>
            多查
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Yi.Furion.Application.App.Services.ITrendsService">
            <summary>
            Trends服务抽象
            </summary>
        </member>
        <member name="T:Yi.Furion.Application.Bbs.Domain.ForumManager">
            <summary>
            论坛模块的领域服务
            </summary>
        </member>
        <member name="T:Yi.Furion.Application.Bbs.Services.IArticleService">
            <summary>
            Article服务抽象
            </summary>
        </member>
        <member name="T:Yi.Furion.Application.Bbs.Services.IBannerService">
            <summary>
            Banner抽象
            </summary>
        </member>
        <member name="T:Yi.Furion.Application.Bbs.Services.ICommentService">
            <summary>
            Comment服务抽象
            </summary>
        </member>
        <member name="T:Yi.Furion.Application.Bbs.Services.IDiscussService">
            <summary>
            Discuss服务抽象
            </summary>
        </member>
        <member name="T:Yi.Furion.Application.Bbs.Services.ILabelService">
            <summary>
            Label服务抽象
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Bbs.Services.Impl.AccessLogService.AccessAsync">
            <summary>
            触发
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Bbs.Services.Impl.AccessLogService.GetWeekAsync">
            <summary>
            获取当前周数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yi.Furion.Application.Bbs.Services.Impl.AgreeService">
            <summary>
            点赞功能
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Bbs.Services.Impl.AgreeService.PostOperateAsync(System.Int64)">
            <summary>
            点赞,返回true为点赞+1，返回false为点赞-1
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yi.Furion.Application.Bbs.Services.Impl.ArticleService">
            <summary>
            Article服务实现
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Bbs.Services.Impl.ArticleService.GetAllAsync(System.Int64)">
            <summary>
            获取文章全部平铺信息
            </summary>
            <param name="discussId"></param>
            <returns></returns>
            <exception cref="T:Yi.Framework.Infrastructure.Exceptions.UserFriendlyException"></exception>
        </member>
        <member name="M:Yi.Furion.Application.Bbs.Services.Impl.ArticleService.GetDiscussIdAsync(System.Int64)">
            <summary>
            查询文章
            </summary>
            <param name="discussId"></param>
            <returns></returns>
            <exception cref="T:Yi.Framework.Infrastructure.Exceptions.UserFriendlyException"></exception>
        </member>
        <member name="M:Yi.Furion.Application.Bbs.Services.Impl.ArticleService.CreateAsync(Yi.Furion.Core.Bbs.Dtos.Article.ArticleCreateInputVo)">
            <summary>
            发表文章
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:Yi.Framework.Infrastructure.Exceptions.UserFriendlyException"></exception>
        </member>
        <member name="M:Yi.Furion.Application.Bbs.Services.Impl.ArticleService.VerifyDiscussCreateIdAsync(System.Nullable{System.Int64})">
            <summary>
            效验创建权限
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:Yi.Furion.Application.Bbs.Services.Impl.BannerService">
            <summary>
            Banner服务实现
            </summary>
        </member>
        <member name="T:Yi.Furion.Application.Bbs.Services.Impl.CommentService">
            <summary>
            评论
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Bbs.Services.Impl.CommentService.GetDiscussIdAsync(System.Int64,Yi.Furion.Core.Bbs.Dtos.Comment.CommentGetListInputVo)">
            <summary>
            获取改主题下的评论,结构为二维列表，该查询无分页
            </summary>
            <param name="discussId"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Bbs.Services.Impl.CommentService.CreateAsync(Yi.Furion.Core.Bbs.Dtos.Comment.CommentCreateInputVo)">
            <summary>
            发表评论
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:Yi.Framework.Infrastructure.Exceptions.UserFriendlyException"></exception>
        </member>
        <member name="T:Yi.Furion.Application.Bbs.Services.Impl.DiscussService">
            <summary>
            Discuss应用服务实现,用于参数效验、领域服务业务组合、日志记录、事务处理、账户信息
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Bbs.Services.Impl.DiscussService.GetAsync(System.Int64)">
            <summary>
            单查
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Bbs.Services.Impl.DiscussService.GetListAsync(Yi.Furion.Core.Bbs.Dtos.Discuss.DiscussGetListInputVo)">
            <summary>
            查询
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Bbs.Services.Impl.DiscussService.CreateAsync(Yi.Furion.Core.Bbs.Dtos.Discuss.DiscussCreateInputVo)">
            <summary>
            创建主题
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Bbs.Services.Impl.DiscussService.VerifyDiscussPermissionAsync(System.Int64)">
            <summary>
            效验主题查询权限
            </summary>
            <param name="discussId"></param>
            <returns></returns>
            <exception cref="T:Yi.Framework.Infrastructure.Exceptions.UserFriendlyException"></exception>
        </member>
        <member name="T:Yi.Furion.Application.Bbs.Services.Impl.MyTypeService">
            <summary>
            Label服务实现
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Bbs.Services.Impl.MyTypeService.GetListCurrentAsync(Yi.Furion.Core.Bbs.Dtos.MyType.MyTypeGetListInputVo)">
            <summary>
            获取当前用户的主题类型
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Bbs.Services.Impl.MyTypeService.CreateAsync(Yi.Furion.Core.Bbs.Dtos.MyType.MyTypeCreateInputVo)">
            <summary>
            创建
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Yi.Furion.Application.Bbs.Services.Impl.PlateService">
            <summary>
            Plate服务实现
            </summary>
        </member>
        <member name="T:Yi.Furion.Application.Bbs.Services.Impl.SettingService">
            <summary>
            Setting服务实现
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Bbs.Services.Impl.SettingService.GetTitleAsync">
            <summary>
            获取配置标题
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Yi.Furion.Application.Bbs.Services.IPlateService">
            <summary>
            Plate服务抽象
            </summary>
        </member>
        <member name="T:Yi.Furion.Application.Bbs.Services.ISettingService">
            <summary>
            Setting应用抽象
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Bbs.Services.ISettingService.GetTitleAsync">
            <summary>
            获取配置标题
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yi.Furion.Application.Rbac.Domain.AccountManager">
            <summary>
            用户领域服务
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Domain.AccountManager.LoginValidationAsync(System.String,System.String,System.Action{Yi.Furion.Core.Rbac.Entities.UserEntity})">
            <summary>
            登录效验
            </summary>
            <param name="userName"></param>
            <param name="password"></param>
            <param name="userAction"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Domain.AccountManager.ExistAsync(System.String,System.Action{Yi.Furion.Core.Rbac.Entities.UserEntity})">
            <summary>
            判断账户合法存在
            </summary>
            <param name="userName"></param>
            <param name="userAction"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Domain.AccountManager.UserInfoToClaim(Yi.Furion.Core.Rbac.Dtos.UserRoleMenuDto)">
            <summary>
            令牌转换
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Domain.AccountManager.UpdatePasswordAsync(System.Int64,System.String,System.String)">
            <summary>
            更新密码
            </summary>
            <param name="userId"></param>
            <param name="newPassword"></param>
            <param name="oldPassword"></param>
            <returns></returns>
            <exception cref="T:Yi.Framework.Infrastructure.Exceptions.UserFriendlyException"></exception>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Domain.AccountManager.RestPasswordAsync(System.Int64,System.String)">
            <summary>
            重置密码
            </summary>
            <param name="userId"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Domain.RoleManager.GiveRoleSetMenuAsync(System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64})">
            <summary>
            给角色设置菜单
            </summary>
            <param name="roleIds"></param>
            <param name="menuIds"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Domain.UserManager.GiveUserSetRoleAsync(System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64})">
            <summary>
            给用户设置角色
            </summary>
            <param name="userIds"></param>
            <param name="roleIds"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Domain.UserManager.GiveUserSetPostAsync(System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64})">
            <summary>
            给用户设置岗位
            </summary>
            <param name="userIds"></param>
            <param name="postIds"></param>
            <returns></returns>
        </member>
        <member name="T:Yi.Furion.Application.Rbac.Services.IConfigService">
            <summary>
            Config服务抽象
            </summary>
        </member>
        <member name="T:Yi.Furion.Application.Rbac.Services.IDeptService">
            <summary>
            Dept服务抽象
            </summary>
        </member>
        <member name="T:Yi.Furion.Application.Rbac.Services.IMenuService">
            <summary>
            Menu服务抽象
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.AccountService.ValidationImageCaptcha(Yi.Furion.Core.Rbac.Dtos.Account.LoginInputVo)">
            <summary>
            效验图片登录验证码,无需和账号绑定
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.AccountService.ValidationPhoneCaptcha(Yi.Furion.Core.Rbac.Dtos.Account.RegisterDto)">
            <summary>
            效验电话验证码，需要与电话号码绑定
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.AccountService.PostLoginAsync(Yi.Furion.Core.Rbac.Dtos.Account.LoginInputVo)">
            <summary>
            登录
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.AccountService.GetCaptchaImage">
            <summary>
            生成验证码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.AccountService.ValidationPhone(System.String)">
            <summary>
            验证电话号码
            </summary>
            <param name="str_handset"></param>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.AccountService.PostCaptchaPhone(Yi.Furion.Core.Rbac.Dtos.Account.PhoneCaptchaImageDto)">
            <summary>
            注册 手机验证码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.AccountService.PostRegisterAsync(Yi.Furion.Core.Rbac.Dtos.Account.RegisterDto)">
            <summary>
            注册，需要验证码通过
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.AccountService.Get">
            <summary>
            查询已登录的账户信息
            </summary>
            <returns></returns>
            <exception cref="T:Yi.Framework.Infrastructure.Exceptions.AuthException"></exception>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.AccountService.GetVue3Router">
            <summary>
            获取当前登录用户的前端路由
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.AccountService.PostLogout">
            <summary>
            退出登录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.AccountService.UpdatePasswordAsync(Yi.Furion.Core.Rbac.Dtos.Account.UpdatePasswordDto)">
            <summary>
            更新密码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.AccountService.RestPasswordAsync(System.Int64,Yi.Furion.Core.Rbac.Dtos.Account.RestPasswordDto)">
            <summary>
            重置密码
            </summary>
            <param name="userId"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.AccountService.UpdateIconAsync(Yi.Furion.Core.Rbac.Dtos.Account.UpdateIconDto)">
            <summary>
             更新头像
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Yi.Furion.Application.Rbac.Services.Impl.ConfigService">
            <summary>
            Config服务实现
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.ConfigService.GetListAsync(Yi.Furion.Core.Rbac.Dtos.Config.ConfigGetListInputVo)">
            <summary>
            多查
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Yi.Furion.Application.Rbac.Services.Impl.DeptService">
            <summary>
            Dept服务实现
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.DeptService.GetRoleIdAsync(System.Int64)">
            <summary>
            通过角色id查询该角色全部部门
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.DeptService.GetListAsync(Yi.Furion.Core.Rbac.Dtos.Dept.DeptGetListInputVo)">
            <summary>
            多查
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Yi.Furion.Application.Rbac.Services.Impl.MenuService">
            <summary>
            Menu服务实现
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.MenuService.GetListRoleIdAsync(System.Int64)">
            <summary>
            查询当前角色的菜单
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.OnlineService.GetListAsync(Yi.Furion.Application.Rbac.SignalRHub.Model.OnlineUserModel)">
            <summary>
            动态条件获取当前在线用户
            </summary>
            <param name="online"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.OnlineService.ForceOut(System.String)">
            <summary>
            强制退出用户
            </summary>
            <param name="connnectionId"></param>
            <returns></returns>
        </member>
        <member name="T:Yi.Furion.Application.Rbac.Services.Impl.PostService">
            <summary>
            Post服务实现
            </summary>
        </member>
        <member name="T:Yi.Furion.Application.Rbac.Services.Impl.RoleService">
            <summary>
            Role服务实现
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.RoleService.CreateAsync(Yi.Furion.Core.Rbac.Dtos.Role.RoleCreateInputVo)">
            <summary>
            添加角色
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.RoleService.UpdateAsync(System.Int64,Yi.Furion.Core.Rbac.Dtos.Role.RoleUpdateInputVo)">
            <summary>
            修改角色
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.RoleService.UpdateStateAsync(System.Int64,System.Boolean)">
            <summary>
            更新状态
            </summary>
            <param name="id"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.RoleService.GetAuthUserByRoleIdAsync(System.Int64,System.Boolean,Yi.Furion.Core.Rbac.Dtos.Role.RoleAuthUserGetListInput)">
            <summary>
            获取角色下的用户
            </summary>
            <param name="roleId"></param>
            <param name="input"></param>
            <param name="isAllocated">是否在该角色下</param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.RoleService.CreateAuthUserAsync(Yi.Furion.Core.Rbac.Dtos.Role.RoleAuthUserCreateOrDeleteInput)">
            <summary>
            批量给用户授权
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.RoleService.DeleteAuthUserAsync(Yi.Furion.Core.Rbac.Dtos.Role.RoleAuthUserCreateOrDeleteInput)">
            <summary>
            批量取消授权
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.TaskService.GetById(System.String)">
            <summary>
            单查job
            </summary>
            <param name="jobId"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.TaskService.GetList(Yi.Furion.Core.Rbac.Dtos.Task.TaskGetListInput)">
            <summary>
            多查job
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.TaskService.Create(Yi.Furion.Core.Rbac.Dtos.Task.TaskCreateInput)">
            <summary>
            创建job
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.TaskService.Remove(System.String)">
            <summary>
            移除job
            </summary>
            <param name="jobId"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.TaskService.Pause(System.String)">
            <summary>
            暂停job
            </summary>
            <param name="jobId"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.TaskService.Start(System.String)">
            <summary>
            开始job
            </summary>
            <param name="jobId"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.TaskService.Update(System.String,Yi.Furion.Core.Rbac.Dtos.Task.TaskUpdateInput)">
            <summary>
            更新job
            </summary>
            <param name="jobId"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Yi.Furion.Application.Rbac.Services.Impl.UserService">
            <summary>
            User服务实现
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.UserService.GetListAsync(Yi.Furion.Core.Rbac.Dtos.User.UserGetListInputVo)">
            <summary>
            查询用户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.UserService.CreateAsync(Yi.Furion.Core.Rbac.Dtos.User.UserCreateInputVo)">
            <summary>
            添加用户
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:Yi.Framework.Infrastructure.Exceptions.UserFriendlyException"></exception>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.UserService.GetAsync(System.Int64)">
            <summary>
            单查
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.UserService.UpdateAsync(System.Int64,Yi.Furion.Core.Rbac.Dtos.User.UserUpdateInputVo)">
            <summary>
            更新用户
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.UserService.UpdateProfileAsync(Yi.Furion.Core.Rbac.Dtos.User.ProfileUpdateInputVo)">
            <summary>
            更新个人中心
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.Services.Impl.UserService.UpdateStateAsync(System.Int64,System.Boolean)">
            <summary>
            更新状态
            </summary>
            <param name="id"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="T:Yi.Furion.Application.Rbac.Services.IPostService">
            <summary>
            Post服务抽象
            </summary>
        </member>
        <member name="T:Yi.Furion.Application.Rbac.Services.IRoleService">
            <summary>
            Role服务抽象
            </summary>
        </member>
        <member name="T:Yi.Furion.Application.Rbac.Services.IUserService">
            <summary>
            User服务抽象
            </summary>
        </member>
        <member name="P:Yi.Furion.Application.Rbac.SignalRHub.Model.OnlineUserModel.ConnnectionId">
            <summary>
            客户端连接Id
            </summary>
        </member>
        <member name="P:Yi.Furion.Application.Rbac.SignalRHub.Model.OnlineUserModel.UserId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.SignalRHub.OnlineUserHub.OnConnectedAsync">
            <summary>
            成功连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yi.Furion.Application.Rbac.SignalRHub.OnlineUserHub.OnDisconnectedAsync(System.Exception)">
            <summary>
            断开连接
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
    </members>
</doc>
